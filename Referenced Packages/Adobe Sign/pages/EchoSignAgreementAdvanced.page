<apex:page title="Agreement: {!agreement.Name}" standardController="echosign_dev1__SIGN_Agreement__c" sidebar="{!IF(NOT ISNULL($CurrentPage.parameters.showheadersidebar),$CurrentPage.parameters.showheadersidebar,'true')}" showHeader="{!IF(NOT ISNULL($CurrentPage.parameters.showheadersidebar),$CurrentPage.parameters.showheadersidebar,'true')}" extensions="echosign_dev1.EchoSignAgreementAdvanced" action="{!initAgreement}" cache="false">
    <apex:includeScript value="{!URLFOR($Resource.echosign_dev1__jquery, '/js/jquery-1.4.4.min.js')}" />

            <script type="text/javascript">
                $jquery = jQuery.noConflict();
                function getSelectorFromSalesforceId(salesforceId) {
                    return '#' + salesforceId.replace(/([#;&,.+*~':"!^$\[\]()=>|/])/g, '\\\\$1');
                }
                  
                function salesforceJQuery(salesforceId) {
                    return jQuery(getSelectorFromSalesforceId(salesforceId));
                }
                
                var popup;
                
                var isAndroid = (navigator.userAgent.match(/Android/i) != null) || isSneakyAndroid();

                function isSneakyAndroid() {
                    var isMacIntel = false;
                    var isLinuxArm = false;
  
                    if (navigator.userAgent.match(/Intel Mac OS/i) != null) {
                        isMacIntel = true;
                    }
                    
                    if (navigator.platform.match(/Linux/i) != null) {
                        isLinuxArm = true;
                    }
                    
                    if (isMacIntel && isLinuxArm) {
                        return true;
                    }
                    
                    return false;
                }
                
                var isiPad = navigator.userAgent.match(/iPad/i) != null; 
                var isiPhone = navigator.userAgent.match(/iPhone/i) != null;
                var isSfdcApp = navigator.userAgent.match(/SalesforceTouchContainer/i) != null;
                var isSafari = navigator.userAgent.match(/Safari/i) != null && navigator.userAgent.match(/Chrome/i) == null;
                
                var isIosMobile = ( isiPad || isiPhone || isAndroid );
                   
                var isIE6 = window.isIE6;
                
                if( isIosMobile || isAndroid ) {
                    isIE6 = true;
                }
                
                function showSpinner() {
    				document.getElementById('{!$Component.agreementPanel}').style.display = 'none';
    				document.getElementById('{!$Component.loadingSpinnerSection}').style.display = 'block';
    			}
        
    			function hideSpinner() {
    				document.getElementById('{!$Component.loadingSpinnerSection}').style.display = 'none';
    				document.getElementById('{!$Component.agreementPanel}').style.display = 'block';
    			}
    			
    			function showReminderSpinner() {
    				document.getElementById('{!$Component.agreementPanel}').style.display = 'none';
    				document.getElementById('{!$Component.loadingSpinnerRemindSection}').style.display = 'block';
    			}
        
    			function hideReminderSpinner() {
    				document.getElementById('{!$Component.loadingSpinnerRemindSection}').style.display = 'none';
    				document.getElementById('{!$Component.agreementPanel}').style.display = 'block';
    			}
    			    			
    			function showDeleteSpinner() {
    				document.getElementById('{!$Component.agreementPanel}').style.display = 'none';
    				document.getElementById('{!$Component.loadingSpinnerDeleteSection}').style.display = 'block';
    			}
        
    			function hideDeleteSpinner() {
    				document.getElementById('{!$Component.loadingSpinnerDeleteSection}').style.display = 'none';
    				document.getElementById('{!$Component.agreementPanel}').style.display = 'block';
    			}
    			
    			function showCancelSpinner() {
    				document.getElementById('{!$Component.agreementPanel}').style.display = 'none';
    				document.getElementById('{!$Component.loadingSpinnerCancelSection}').style.display = 'block';
    			}
        
    			function hideCancelSpinner() {
    				document.getElementById('{!$Component.loadingSpinnerCancelSection}').style.display = 'none';
    				document.getElementById('{!$Component.agreementPanel}').style.display = 'block';
    			}
            </script> 
    <style type="text/css">
        .echo-button {
            padding-right: 5px;
        }
        .apexp .detailList .list td, .apexp .detailList .list th, 
        .apexp .editPage .bPageBlock .detailList .list tr td, 
        .apexp .editPage .bPageBlock .detailList .list tr th {
            border:0 none;
        }
        
		.echoSignButton {
			-moz-box-shadow:inset 0px 0px 4px 0px #bbdaf7;
			-webkit-box-shadow:inset 0px 0px 4px 0px #bbdaf7;
			box-shadow:inset 0px 0px 4px 0px #bbdaf7;
			background-color:#27A2C4;
			-moz-border-radius:5px;
			-webkit-border-radius:5px;
			border-radius:5px;
			border:1px solid #84bbf3;
			display:inline-block;
			color:#ffffff;
			font-family:arial;
			font-size:13px;
			font-weight:bold;
			padding:6px 22px;
			text-decoration:none;
			text-shadow:1px 0px 1px #528ecc;
			margin-right: 5px;
		}.echoSignButton:hover {
			background-color:#378de5;
		}.echoSignButton:active {
			position:relative;
			top:1px;
		}
		
		.image {
    		position:relative;
		}
		.image .textDrafted {
    		position:absolute;
    		top:10px;
    		left:60px;
    		color:white;
    		font-size:18px;
    		font-weight:bold;
		}
		.image .textInProgress {
    		position:absolute;
    		top:10px;
    		left:220px;
    		color:white;
    		font-size:18px;
    		font-weight:bold;
		}
		.image .textCompleted {
    		position:absolute;
    		top:10px;
    		left:400px;
    		color:white;
    		font-size:18px;
    		font-weight:bold;
		}
    </style>
    
    <apex:outputpanel id="loadingSpinnerSection" style="display: none; width: 100%; height: 100%;">
    	<iframe width="100%" height="100%" frameborder="0" src="{!$Page.SendForSignature}"></iframe>
	</apex:outputpanel>    
	
	<apex:outputpanel id="loadingSpinnerRemindSection" style="display: none; width: 100%; height: 100%;">
    	<iframe width="100%" height="100%" frameborder="0" src="{!$Page.SendReminder}"></iframe>
	</apex:outputpanel>
	
	<apex:outputpanel id="loadingSpinnerDeleteSection" style="display: none; width: 100%; height: 100%;">
    	<iframe width="100%" height="100%" frameborder="0" src="{!$Page.DeleteAgreement}?deleteButton=false"></iframe>
	</apex:outputpanel>
	
	<apex:outputpanel id="loadingSpinnerCancelSection" style="display: none; width: 100%; height: 100%;">
    	<iframe width="100%" height="100%" frameborder="0" src="{!$Page.CancelAgreement}"></iframe>
	</apex:outputpanel>  
    
    <apex:outputpanel id="agreementPanel" style="display: none;">
    
    <apex:form id="AgreementFormTitleId">
        <apex:sectionHeader title="{!$ObjectType.echosign_dev1__SIGN_Agreement__c.label}" subtitle="{!agreement.Name}"/>
    </apex:form>
    
    <chatter:feedWithFollowers entityId="{!agreement.Id}" rendered="{! !(!ISNULL(cusSettings) && cusSettings.Disable_Agreement_Chatter_Feed__c) }"></chatter:feedWithFollowers>

    <apex:form id="AgreementFormId">
        <apex:variable var="errorMsg" value="{!agreement.echosign_dev1__ErrorMessage__c}" />
        <apex:variable var="agreementStatus" value="{!agreement.echosign_dev1__Status__c}"/>
        <apex:variable var="agreementStatusVisible" value="{!agreement.echosign_dev1__StatusVisible__c}"/>
        <apex:variable var="lastEventId" value="{!agreement.echosign_dev1__LastEventId__c}"/>
        <apex:variable var="isError" value="{! LEN(errorMsg) > 0 }"/>
        <apex:variable var="isSendInProgress" value="{! AND( agreementStatus == 'Send in Progress', NOT(isError) ) }"/>
        <apex:variable var="inPresend" value="{!agreementStatus == 'Pre-Send'}"/>
        <apex:variable var="isApproved" value="{!agreementStatus == 'Approved'}"/>
        <apex:variable var="isSigned" value="{!agreementStatus == 'Signed'}"/>
        <apex:variable var="isFiled" value="{! isApproved || isSigned }"/>
        <apex:variable var="isAborted" value="{!agreementStatus == 'Aborted'}"/>
        <apex:variable var="inProgress" value="{!agreementStatus == 'Out for Signature' || agreementStatus == 'Out for Approval' || agreementStatus == 'Waiting for Counter-Signature' || agreementStatus == 'Waiting for Counter-Approval' || agreementStatus == 'WidgetWaitingForVerification' || isSendInProgress }" />
        <apex:variable var="hasBeenSent" value="{! agreementStatus != 'Draft' && agreementStatus != 'Pre-Send' && ( NOT( AND( agreementStatus == 'Send in Progress', isError ) ) ) }" />
        <apex:variable var="notYetSent" value="{!NOT(hasBeenSent)}" />
        <apex:variable var="hasBeenSubmitted" value="{! agreementStatus != 'Draft' && ( NOT( AND( agreementStatus == 'Send in Progress', isError ) ) ) }" />
        <apex:variable var="notYetSubmitted" value="{!NOT(hasBeenSubmitted)}" />
        <apex:variable var="applicableForCancel" value="{!inProgress}" />
        <apex:variable var="applicableForUpdate" value="{!OR(inProgress, inPresend)}" />
        <apex:variable var="displayPasswordInput" value="{!notYetSent && ( ( agreement.echosign_dev1__External_Signers_Verification_Method__c = 'Password to sign agreement' ) || ( agreement.echosign_dev1__Internal_Signers_Verification_Method__c = 'Password to sign agreement' ) || agreement.echosign_dev1__PasswordProtectPDF__c)}" id="passwordVar"/>
        <apex:variable var="isAgreementSaved" value="{! agreement.Id != NULL }"/>
        <apex:variable var="isDraftedProgress" value="{! ( agreementStatus == 'Draft' || agreementStatus == 'Pre-Send' ) && isAgreementSaved }"/>
        <apex:variable var="isInProgressProgress" value="{! agreementStatus == 'Out for Signature' || agreementStatus == 'Waiting for Counter-Signature' || agreementStatus == 'Out for Approval' || agreementStatus == 'Waiting for Counter-Approval' || isSendInProgress }"/> 
        <apex:variable var="isCompletedProgress" value="{! isSigned || isApproved }"/>
        <apex:variable var="isCanceledProgress" value="{! agreementStatus == 'Cancelled / Declined' || isAborted }"/>
        <apex:variable var="isExpiredProgress" value="{! agreementStatus == 'Expired' }"/>
        
        <apex:variable var="isWindowActionWindowType" value="{! (!ISNULL(cusSettings) && cusSettings.Action_Window_Type__c == 'Window') }" />
        <apex:variable var="isFrameActionWindowType" value="{! (!ISNULL(cusSettings) && cusSettings.Action_Window_Type__c == 'Frame') }" />
        
        <apex:variable var="isDisableCc" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Cc__c) }" />
        <apex:variable var="isDisableAddRecipient" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Add_Recipient__c) }" />
        <apex:variable var="isDisableDeleteRecipient" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Delete_Recipient__c) }" />
        <apex:variable var="isDisableSortRecipients" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Sort_Recipients__c) }" />
        <apex:variable var="isRenderDeleteRecipient" value="{! AND( notYetSent, NOT(isDisableDeleteRecipient) ) }" />
        <apex:variable var="isDisableSenderSigns" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Sender_Signs__c) }" />
        <apex:variable var="isDisableSignatureType" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Signature_Type__c) }" />
        <apex:variable var="isDisableAccountLookup" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Account_Lookup__c) }" />
        <apex:variable var="isDisableOpportunityLookup" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Opportunity_Lookup__c) }" />
        <apex:variable var="isDisableSignPassword" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Sign_Password__c) }" />
        <apex:variable var="isDisableViewPassword" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_View_Password__c) }" />
        <apex:variable var="isDisableSignExpiration" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Sign_Expiration__c) }" />
        <apex:variable var="isDisableSignReminder" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Sign_Reminder__c) }" />
        <apex:variable var="isDisablePreviewPosition" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Preview_Position__c) }" />
        <apex:variable var="isDisableKba" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Knowledge_Based_Authentication__c) }" />
        <apex:variable var="isDisableWebIdentity" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Web_Identity__c) }" />
        <apex:variable var="isEnableSeparateSignerIdentity" value="{! (!ISNULL(cusSettings) && cusSettings.Enable_Separate_Signer_Identity_Methods__c) }" />
        <apex:variable var="isEnableApproverRecipientRole" value="{! (!ISNULL(cusSettings) && cusSettings.Enable_Recipient_Approver_Role__c) }" />
        
        <apex:variable var="isDisableEditAttachments" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Edit_Agreement_Attachments__c) }" />
        <apex:variable var="isDisableDeleteAttachments" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Delete_Agreement_Attachments__c) }" />
        <apex:variable var="isDisableUploadAttachments" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Upload_Agreement_Attachments__c) }" />
        <apex:variable var="isDisableAttachAttachments" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Attach_Agreement_Attachments__c) }" />
        <apex:variable var="isDisableContentAttachments" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Content_Agreement_Attachments__c) }" />
        <apex:variable var="isDisableViewAttachments" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_View_Agreement_Attachments__c) }" />
        <apex:variable var="isDisableSortAttachments" value="{! (!ISNULL(cusSettings) && cusSettings.Disable_Sort_Attachments__c) }" />
        
        <apex:variable var="isReadOnlyRecipient" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Recipient__c) }" />
        <apex:variable var="isReadOnlySenderSigns" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Sender_Signs__c) }" />
        <apex:variable var="isReadOnlyCc" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Cc__c) }" />
        <apex:variable var="isReadOnlyHostedSigning" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Hosted_Signing__c) }" />
        <apex:variable var="isReadOnlyAgreementName" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Agreement_Name__c) }" />
        <apex:variable var="isReadOnlyMessage" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Message__c) }" />
        <apex:variable var="isReadOnlyLanguage" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Language__c) }" />
        <apex:variable var="isReadOnlySignatureType" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Signature_Type__c) }" />
        <apex:variable var="isReadOnlyAccount" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Account__c) }" />
        <apex:variable var="isReadOnlyOpportunity" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Opportunity__c) }" />
        <apex:variable var="isReadOnlySignExpiration" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Sign_Expiration__c) }" />
        <apex:variable var="isReadOnlySignReminder" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Sign_Reminder__c) }" />
        <apex:variable var="isReadOnlySignPreviewPosition" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Preview_Position__c) }" />
        <apex:variable var="isReadOnlySecurityOptions" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Security_Options__c) }" />
        <apex:variable var="isReadOnlyFieldSet" value="{! (!ISNULL(cusSettings) && cusSettings.Read_Only_Field_Set__c) }" />
        
        <apex:variable var="isDisableAgreementReviewLogo" value="{! (!ISNULL(cusToolbarSettings) && cusToolbarSettings.Disable_Agreement_Review_Logo__c) }" />
        
        <apex:variable var="isEnableOnloadActionSend" value="{! (notYetSent && cusToolbarSettings.Send_Agreement__c) }" />
        <apex:variable var="isEnableOnloadActionRemind" value="{! (inProgress && cusToolbarSettings.Send_Reminder__c) }" />
        <apex:variable var="isEnableOnloadActionView" value="{! (hasBeenSent && cusToolbarSettings.View_Agreement__c) }" />
        <apex:variable var="isEnableOnloadActionDelete" value="{! (hasBeenSent && cusToolbarSettings.Delete_Agreement__c) }" />
        <apex:variable var="isEnableOnloadActionCancel" value="{! (applicableForCancel && cusToolbarSettings.Cancel_Agreement__c) }" />
        <apex:variable var="isEnableOnloadActionUpdate" value="{! (applicableForUpdate && cusToolbarSettings.Update_Status__c) }" />
        
        <apex:outputPanel rendered="{!AND(echosign_dev1__SIGN_Agreement__c.echosign_dev1__ReturnURL__c!='',echosign_dev1__SIGN_Agreement__c.echosign_dev1__ReturnURL_Text__c!='')}">
            <apex:commandLink id="ReturnURLLink" action="{!getReturnUrl}">
                {!echosign_dev1__SIGN_Agreement__c.echosign_dev1__ReturnURL_Text__c}
            </apex:commandLink>
        </apex:outputPanel>
        
        <!-- <apex:outputpanel id="logoutPanel">
            <script type="text/javascript" src="https://secure.echosign.com/public/logout"></script>
        </apex:outputpanel> -->
        
        <iframe height="0" width="0" src="https://secure.echosign.com/public/logout" style="visibility:hidden;display:none"></iframe>
        
        <apex:pageBlock title="{!$Label.Actions_Section_Header}" id="actionPageBlock">
            <apex:pageBlockSection id="buttonsSection" columns="1">
                <apex:pageBlockSectionItem >
                    <apex:outputPanel id="errorPanel">
                        <apex:outputPanel style="text-align: left;" styleClass="errorMsg" layout="block" rendered="{!pageHaserror}">
                            <strong>{!$Label.Correct_Error_Notice} </strong>
                            <script>
                                if (popup && !popup.closed) { popup.close(); }
                                if( isIosMobile ) { hideSpinner(); }
                                salesforceJQuery('{!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.sendAgreementButtonImage}').show();
                                salesforceJQuery('{!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.sendAgreementButtonDisabled}').hide();                                            
                            </script>                                 
                            <apex:messages styleClass="pbError" style="text-align: left;" />   
                        </apex:outputPanel>            
                        <apex:outputPanel rendered="{!!pageHaserror}">
                            <apex:pagemessages />
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>  
                <apex:pageBlockSectionItem rendered="{!LEN(errorMsg) > 0}">
                    <apex:outputText >
                        <apex:image url="{!$Resource.echosign_dev1__ErrorIcon}"/>
                        <apex:outputPanel styleClass="errorMsg"><b>{!errorMsg}</b></apex:outputPanel>
                    </apex:outputText>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem rendered="{! !isDisableAgreementReviewLogo }">
                	<apex:outputPanel style="float: right;">
            			<a href="https://appexchange.salesforce.com/listingDetail?listingId=a0N300000016ZmCEAU&tab=r" target="_blank"><apex:image url="{!$Resource.echosign_dev1__AppReviewIcon}" style="margin-bottom: 5px;"/></a>
            			<apex:outputPanel >&nbsp;<a target="_blank" style="vertical-align: super; color: #27A2C4; font-size: 14px; font-weight: bold; text-decoration: none;" href="https://appexchange.salesforce.com/listingDetail?listingId=a0N300000016ZmCEAU&tab=r">{!$Label.EchoSign_Review_Label}</a></apex:outputPanel>
            		</apex:outputPanel>
                </apex:pageBlockSectionItem>
				<apex:pageBlockSectionItem rendered="{! isDraftedProgress || isInProgressProgress || isCompletedProgress || isCanceledProgress || isExpiredProgress }">
					<apex:outputPanel layout="block" styleClass="image">
						<apex:image url="{! IF( isDraftedProgress, $Resource.GreenArrow, $Resource.BlueArrow ) }" />
  						<apex:outputPanel layout="block" styleClass="textDrafted">{!$Label.Drafted_Progress_Status}</apex:outputPanel>
						<apex:outputPanel style="margin-left: -30px;" >
  							<apex:image url="{! IF( isInProgressProgress, $Resource.GreenArrow, $Resource.BlueArrow ) }" />
  						</apex:outputPanel>
  						<apex:outputPanel layout="block" styleClass="textInProgress">{!$Label.InProgress_Progress_Status}</apex:outputPanel>
						<apex:outputPanel style="margin-left: -30px;" >
  							<apex:image url="{! IF( isCompletedProgress || isCanceledProgress || isExpiredProgress, $Resource.GreenArrow, $Resource.BlueArrow ) }" />
  						</apex:outputPanel>
  						<apex:outputPanel layout="block" styleClass="textCompleted">{! IF( isCompletedProgress, $Label.Completed_Progress_Status, IF( isCanceledProgress, $Label.Canceled_Progress_Status, IF( isExpiredProgress, $Label.Expired_Progress_Status, $Label.Completed_Progress_Status ) ) ) }</apex:outputPanel>
					</apex:outputPanel>
				</apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem rendered="{! hasBeenSent || inPresend || isSendInProgress }">
                    <apex:outputText >          
                        <strong>{!$Label.Agreement_Status_Label} </strong>
                        <apex:outputText value="{!agreementStatusVisible}"/>
                    </apex:outputText>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="buttons">    
                    <apex:outputPanel >
                        <table width="100%">
                            <tr>
                                <td align="left"> 
                                	<apex:commandButton id="sendAgreementLink" value="{!$Label.Send_Button_Label}" styleClass="echoSignButton" action="{!sendForSignature}" onclick="pageHasError='false'; if( isIosMobile ) { showSpinner(); } else { myShow('{!$Page.echosign_dev1__SendForSignature}'); }" oncomplete="onComplete();" rerender="errorPanel,errorPanelBottom,agreementDetailsOP,AgreementOptionsSection,recipientsSection,myPanel2" rendered="{!IF(notYetSent && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Send_Agreement__c),'true','false')}"/>
                                    <apex:commandButton id="saveAgreementLink" onclick="checkDoubleSubmit(this);" value="{!$Label.Save_Button_Label}" styleClass="echoSignButton" action="{!saveWithoutSending}" rendered="{!IF(notYetSent && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Save_Agreement__c),'true','false')}" rerender="AgreementFormId,attachmentSection"/>
                                    
                                    <apex:actionFunction name="doSendReminder" action="{!sendReminder}" oncomplete="if( isIosMobile ) { hideReminderSpinner(); reloadPage(); } else { onFinish(); }" rerender="errorPanel,errorPanelBottom,floatingDiv,agreementDetailsOP,AgreementOptionsSection,recipientsSection,theActionPoller,myPanel2"/>
                                    
                                    <apex:actionFunction name="doCancelAgreement" action="{!cancelAgreement}" oncomplete="if(pageHasError=='false'){ if( isIosMobile ) { setTimeout('hideCancelSpinner(); reloadPage();', 2500); } else { updateStatus(); } }else{onFinish();}" rerender="errorPanel,errorPanelBottom,floatingDiv,agreementDetailsOP,AgreementOptionsSection,recipientsSection,theActionPoller,myPanel2">
                                        <apex:param name="cancelReason" assignTo="{!cancelReason}" value="reason" />
                                    </apex:actionFunction>
                                    
                                    <apex:actionFunction name="doDeleteAgreement" action="{!removeAgreement}" oncomplete="if(pageHasError=='false'){updateStatus(); }else{onFinish();}" rerender="errorPanel,errorPanelBottom,floatingDiv,agreementDetailsOP,AgreementOptionsSection,recipientsSection,theActionPoller,myPanel2">
                                        <apex:param name="cancelReason" assignTo="{!cancelReason}" value="reason" />
                                    </apex:actionFunction>
                                     
                                    <apex:actionFunction name="sendAgreement" action="{!sendAgreement}" oncomplete="if( (pageHasError == 'false') && ( ( !{!agreement.echosign_dev1__Enable_Hosted_Signing__c} || ( {!agreement.echosign_dev1__Enable_Hosted_Signing__c} && {!agreement.echosign_dev1__Authoring__c} ) ) ) ) { sendEnabled = false; if( isIosMobile ) { hideSpinner(); myShow('{!agreementSigningUrl}'); } else { myShow('{!agreementSigningUrl}'); } window.document.getElementById('dialogCloseButton').style.display = 'block'; } else if(pageHasError=='false'){ }else{onFinish();}" rerender="errorPanel,errorPanelBottom,floatingDiv,agreementDetailsOP,AgreementOptionsSection,recipientsSection,theActionPoller,myPanel2"/>
                                    <apex:actionFunction name="doUnsetOnLoadActionField" action="{!wipeOnloadActionAndUpdate}" oncomplete="return false;"/>
                                    
                                    <apex:outputpanel id="theActionPoller">
                                        <apex:outputpanel rendered="{!startActionPoller}">
                                            <apex:actionPoller action="{!retrieveSigningUrl}" oncomplete="if(pageHasError=='false'){sendEnabled = false; myShow('{!agreementSigningUrl}'); window.document.getElementById('dialogCloseButton').style.display = 'block'; }else{onFinish();}" rerender="errorPanel,errorPanelBottom,floatingDiv,agreementDetailsOP,AgreementOptionsSection,recipientsSection,floatingDiv,theSigningPanel,theStatusPanel" interval="5" />
                                        </apex:outputpanel>
                                    </apex:outputpanel>
                                    <apex:commandButton id="updateAgreement" styleClass="echoSignButton" value="{!$Label.Update_Agreement_Button_Label}" rendered="{!IF(applicableForUpdate && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Update_Status__c),'true','false')}" onclick="updateStatus(); return false;" />                
                                    <apex:commandButton id="remindAgreement" styleClass="echoSignButton" value="{!$Label.Remind_Agreement_Button_Label}" rendered="{!IF(inProgress && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Send_Reminder__c),'true','false')}" onclick="sendReminder(); return false;" /> 
                                    <apex:commandButton id="viewAgreement" styleClass="echoSignButton" value="{!$Label.View_Agreement_Button_Label}" rendered="{!IF(hasBeenSent && NOT(isSendInProgress) && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__View_Agreement__c),'true','false')}" onclick="viewAgreement(); return false;"/>
                                </td>
                                <td align="right">
                                    <apex:commandButton id="deleteAgreement" styleClass="echoSignButton" value="{!$Label.Delete_Agreement_Button_Label}" rendered="{!IF(hasBeenSent && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Delete_Agreement__c),'true','false')}" onclick="if( {!inProgress} ) { var reason = window.prompt('{! JSENCODE($Label.Delete_Agreement_Prompt) } {! JSENCODE(agreement.Name) }?\n{!$Label.Reason_Prompt}:',''); if( reason === null || reason === '' && isSafari && confirm('Was that cancel?') ) { return; } else if( reason == null ) {return false;} deleteAgreement(reason); return false; } else { if(!confirm('{! JSENCODE($Label.Delete_Agreement_Prompt) }?')){return false;} deleteAgreement();  return false; }" />
                                    <apex:commandButton id="cancelAgreement" styleClass="echoSignButton" value="{!$Label.Cancel_Agreement_Button_Label}" rendered="{!IF(applicableForCancel && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Cancel_Agreement__c),'true','false')}" onclick="var reason = window.prompt('{! JSENCODE($Label.Cancel_Agreement_Prompt) } {! JSENCODE(agreement.Name) }?\n{!$Label.Reason_Prompt}:',''); if( reason === null || reason === '' && isSafari && confirm('Was that cancel?') ) { return; } else if( reason == null ) {return false;} cancelAgreement(reason); return false;" />
                                    <apex:commandButton id="cancelAgreementLink" styleClass="echoSignButton" value="{!$Label.Cancel_Button_Label}" action="{!cancelDraft}" rendered="{!IF(notYetSent && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Cancel_Draft__c),'true','false')}"/>
                                </td>
                            </tr>
                        </table>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
        </apex:pageBlock>
         
        <apex:pageBlock mode="edit" id="detailPageBlock">
            <apex:pageBlockSection id="recipientsSection" title="{!$Label.Recipients_Section_Header}" columns="1">
                
                <apex:outputPanel id="recipientsListSection">
                    <table width="100%" class="list" id="recipientsTable">
                        <thead class="dr-table-thead">
                            <tr class="headerRow">
                                <th class="headerRow">{!$Label.Recipients_Action_Column_Label}</th>
                                <th class="headerRow" style="display: {! IF( isEnableApproverRecipientRole, 'block', 'none' ) }">{!$Label.Recipients_Role_Column_Label}</th>
                                <th class="headerRow">{!$Label.Recipients_Type_Column_Label}</th>
                                <th class="headerRow">{!$Label.Recipients_Recipient_Column_Label}</th>
                                <th class="headerRow">{!$Label.Recipients_Email_Column_Label}</th>
                            </tr>
                        </thead>
                        <tbody>
                            <apex:repeat value="{!Recipients}" var="rec" id="RecipientTable">
                                <tr class="dataRow even first last">
                                    <td class="dataCell" width="15%" style="vertical-align: top;">  
                                        <apex:commandButton action="{!delRecipient}" title="{!$Label.Delete_Recipient_Tooltip}" image="{!$Resource.echosign_dev1__ActionDelete}" rerender="recipientsListSection" rendered="{!isRenderDeleteRecipient}" status="DeletingStatus" style="background:transparent;border-width:0px;">
                                            <apex:param name="recipientNumber" value="{!rec.recipient.echosign_dev1__Order_Number__c}"/>
                                        </apex:commandButton>
                                        <apex:commandButton action="{!onUpRecipient}" title="{!$Label.Recipient_Order_Tooltip}" image="{!$Resource.echosign_dev1__UpGreenArrow}" rendered="{! notYetSubmitted && NOT(rec.recipient.Order_Number__c = 1) && NOT(isDisableSortRecipients) }" status="DeletingStatus" rerender="recipientsListSection,errorPanel,errorPanelBottom" style="background:transparent;border-width:0px;margin-left:8px;">
                                            <apex:param assignTo="{!selectedRecipientIndex}" value="{!rec.recipient.echosign_dev1__Order_Number__c}" name="selectedRecipientIndex"/>
                                        </apex:commandButton>
                                        <apex:outputPanel rendered="{! notYetSubmitted && rec.recipient.Order_Number__c = 1 && NOT(isDisableSortRecipients) }">
                                            <img src="{!$Resource.FadeUpGreenArrow}" alt="{!$Label.Recipient_Order_Tooltip}" style="background:transparent;border-width:0px;margin-left:8px;" title="{!$Label.Recipient_Order_Tooltip}" />
                                        </apex:outputPanel>
                                        <apex:commandButton action="{!onDownRecipient}" title="{!$Label.Recipient_Order_Tooltip}" image="{!$Resource.echosign_dev1__DownGreenArrow}" rendered="{! notYetSubmitted && NOT(rec.recipient.Order_Number__c = Recipients.size) && NOT(isDisableSortRecipients) }" status="DeletingStatus" rerender="recipientsListSection,errorPanel,errorPanelBottom" style="background:transparent;border-width:0px;margin-left:8px;">
                                            <apex:param assignTo="{!selectedRecipientIndex}" value="{!rec.recipient.echosign_dev1__Order_Number__c}" name="selectedRecipientIndex"/>
                                        </apex:commandButton>
                                        <apex:outputPanel rendered="{! notYetSubmitted && rec.recipient.Order_Number__c = Recipients.size && NOT(isDisableSortRecipients) }">
                                            <img src="{!$Resource.FadeDownGreenArrow}" alt="{!$Label.Recipient_Order_Tooltip}" style="background:transparent;border-width:0px;margin-left:8px;" title="{!$Label.Recipient_Order_Tooltip}" />
                                        </apex:outputPanel>
                                        <apex:actionRegion >
                                        <apex:actionStatus id="DeletingStatus">
                                            <apex:facet name="start">
                                            <div class="waitingSearchDiv" style="width: 100%; height: 100%; display: ; opacity:.5;"></div>
                                            <img src="{!$Resource.loading}" style="width:20px;height:20px" /></apex:facet>
                                        </apex:actionStatus>
                                        </apex:actionRegion>
                                    </td>
                                    <td class="dataCell" style="vertical-align: top; display: {! IF( isEnableApproverRecipientRole, 'block', 'none' ) }">
                                        <apex:selectList id="RecipientRole" value="{!rec.recipient.echosign_dev1__Recipient_Role__c}" size="1" rendered="{! notYetSent }" disabled="{! isReadOnlyRecipient }">
                                            <apex:selectOptions value="{!recipientRoles}"/>
                                            <apex:actionSupport status="populatingRecipientTypeStatus" event="onchange" rerender="recipientsListSection" />
                                        </apex:selectList>
                                        <apex:outputField value="{!rec.recipient.echosign_dev1__Recipient_Role__c}" rendered="{! hasBeenSent }" />
                                    </td>
                                    <td class="dataCell" width="15%" style="vertical-align: top;">
                                    
                                        <apex:selectList id="RecipientType" value="{!rec.recipient.echosign_dev1__Recipient_Type__c}" size="1" rendered="{! notYetSent }" disabled="{! isReadOnlyRecipient }">
                                            <apex:selectOptions value="{!recipientTypes}"/>
                                            <apex:actionSupport status="populatingRecipientTypeStatus" event="onchange" onsubmit="
                                            if(document.getElementById('{!$Component.contact}')!=null){
                                                document.getElementById('{!$Component.contact}').value=''; 
                                            }
                                            if(document.getElementById('{!$Component.lead}')!=null){
                                                document.getElementById('{!$Component.lead}').value=''; 
                                            
                                            }if(document.getElementById('{!$Component.user}')!=null){
                                                document.getElementById('{!$Component.user}').value='';
                                                
                                            }if(document.getElementById('{!$Component.email}')!=null){
                                                document.getElementById('{!$Component.email}').value='';
                                            }" action="{!onRecipientTypeChange}" rerender="detailPageBlock,recipientsListSection">
                                                <apex:param name="recipientNumber" value="{!rec.recipient.echosign_dev1__Order_Number__c}" />
                                            </apex:actionSupport>
                                        </apex:selectList>
                                        <apex:actionStatus id="populatingRecipientTypeStatus">
                                            <apex:facet name="start">
                                            <div class="waitingSearchDiv" style="width: 100%; height: 100%; display: ; opacity:.5;"></div>                                            
                                            </apex:facet>
                                        </apex:actionStatus>                                        
                                        <apex:outputField value="{!rec.recipient.echosign_dev1__Recipient_Type__c}" rendered="{! hasBeenSent }"/>
                                    </td>
                                    <td class="dataCell" width="30%">
                                        <apex:inputField id="contact" value="{!rec.recipient.echosign_dev1__Contact__c}"  rendered="{!AND(notYetSent,rec.recipient.echosign_dev1__Recipient_Type__c == 'Contact',!isReadOnlyRecipient)}" >
                                            <apex:actionSupport status="populatingRecipientStatus" event="onchange" focus="recipientsListSection" action="{!updateEmail_FaxAddress}" rerender="errorPanel,errorPanelBottom,recipientsListSection">
                                                <apex:param name="recipientNumber" value="{!rec.recipient.echosign_dev1__Order_Number__c}" />
                                            </apex:actionSupport>
                                            <!--apex:actionSupport status="populatingRecipientStatus" event="onblur" action="{!updateEmail_FaxAddress}" rerender="recipientsListSection">
                                                <apex:param name="recipientNumber" value="{!rec.recipient.echosign_dev1__Order_Number__c}" />
                                            </apex:actionSupport-->                                       
                                        </apex:inputField>
                                        <apex:outputField value="{!rec.recipient.echosign_dev1__Contact__c}" rendered="{! AND(hasBeenSent,rec.recipient.Recipient_Type__c == 'Contact') || isReadOnlyRecipient }" />
                                        
                                        <apex:inputField id="lead" value="{!rec.recipient.echosign_dev1__Lead__c}" rendered="{!AND(notYetSent,rec.recipient.echosign_dev1__Recipient_Type__c == 'Lead',!isReadOnlyRecipient)}">
                                            <apex:actionSupport status="populatingRecipientStatus" event="onchange" focus="recipientsListSection" action="{!updateEmail_FaxAddress}" rerender="errorPanel,errorPanelBottom,recipientsListSection">
                                                <apex:param name="recipientNumber" value="{!rec.recipient.echosign_dev1__Order_Number__c}" />
                                            </apex:actionSupport>
                                            <!-- apex:actionSupport event="onblur" action="{!updateEmail_FaxAddress}" rerender="recipientsListSection">
                                                <apex:param name="recipientNumber" value="{!rec.recipient.echosign_dev1__Order_Number__c}" />
                                            </apex:actionSupport-->                                            
                                        </apex:inputField>
                                        <apex:outputField value="{!rec.recipient.echosign_dev1__Lead__c}" rendered="{! AND(hasBeenSent,rec.recipient.Recipient_Type__c == 'Lead') || isReadOnlyRecipient }" />
                                        
                                        <apex:inputField id="user" value="{!rec.recipient.echosign_dev1__User__c}" rendered="{!AND(notYetSent,rec.recipient.echosign_dev1__Recipient_Type__c == 'User',!isReadOnlyRecipient)}">
                                            <apex:actionSupport status="populatingRecipientStatus" event="onchange" focus="recipientsListSection" action="{!updateEmail_FaxAddress}" rerender="errorPanel,errorPanelBottom,recipientsListSection">
                                                <apex:param name="recipientNumber" value="{!rec.recipient.echosign_dev1__Order_Number__c}" />
                                            </apex:actionSupport>
                                            <!-- apex:actionSupport event="onblur" action="{!updateEmail_FaxAddress}" rerender="recipientsListSection">
                                                <apex:param name="recipientNumber" value="{!rec.recipient.echosign_dev1__Order_Number__c}" />
                                            </apex:actionSupport-->                                          
                                        </apex:inputField>
                                        <apex:outputField value="{!rec.recipient.echosign_dev1__User__c}" rendered="{! AND(hasBeenSent,rec.recipient.Recipient_Type__c == 'User') || isReadOnlyRecipient }" />
         
                                        <apex:inputField id="email" value="{!rec.recipient.echosign_dev1__Email_Address__c}" rendered="{!AND(notYetSent, rec.recipient.echosign_dev1__Recipient_Type__c == 'Email',!isReadOnlyRecipient)}">
                                            <apex:actionSupport status="populatingRecipientStatus" event="onchange" focus="recipientsListSection" action="{!updateEmail_FaxAddress}" rerender="errorPanel,errorPanelBottom,recipientsListSection">
                                                <apex:param name="recipientNumber" value="{!rec.recipient.echosign_dev1__Order_Number__c}" />
                                            </apex:actionSupport>
                                        </apex:inputField>
                                        <apex:outputField value="{!rec.recipient.echosign_dev1__Email_Address__c}" rendered="{! AND(hasBeenSent, rec.recipient.Recipient_Type__c == 'Email') || isReadOnlyRecipient }" />
                                        
                                        <apex:actionStatus id="populatingRecipientStatus">
                                            <apex:facet name="start">
                                            <div class="waitingSearchDiv" style="width: 100%; height: 100%; display: ; opacity:.5;"></div>
                                            <img src="{!$Resource.Loading}" style="width:20px;height:20px" /></apex:facet>
                                        </apex:actionStatus>                                        
                                    </td>
                                    <td class="dataCell" width="30%">
                                        <apex:inputField style="display:none" rendered="{!rec.recipient.echosign_dev1__Recipient_Type__c!='Email'}" value="{!rec.recipient.echosign_dev1__Email_Address__c}" />
                                        
                                        <apex:outputText id="emailDisplay" value="{!rec.EmailAddress}" rendered="{!rec.useEmailAddress && rec.recipient.echosign_dev1__Recipient_Type__c!='Email'}" /> &nbsp; &nbsp;
                                        <apex:commandLink value="Use Fax" action="{!switchToFaxAddress}" rerender="recipientsListSection" rendered="{!AND(notYetSent,rec.showFaxOption)}">
                                            <apex:param name="recipientNumber" value="{!rec.recipient.echosign_dev1__Order_Number__c}" />
                                        </apex:commandLink>
                                        <apex:outputText value="{!rec.FaxAddress}" rendered="{!rec.useFaxAddress}" /> &nbsp; &nbsp;
                                        <apex:commandLink value="Use Email" action="{!switchToEmailAddress}" rerender="recipientsListSection" rendered="{!AND(notYetSent,rec.showEmailOption)}">
                                            <apex:param name="recipientNumber" value="{!rec.recipient.echosign_dev1__Order_Number__c}" />
                                        </apex:commandLink>
                                    </td>
                                    
                                </tr>
                            </apex:repeat>
                        </tbody>
                    </table>
                </apex:outputPanel>
                <apex:outputPanel id="ButtonSection">
                    <apex:commandLink immediate="true" action="{!addRecipient}" value="{!$Label.Add_Recipient_Label}" rerender="recipientsListSection" status="LoadingStatus" rendered="{! notYetSent && NOT(isDisableAddRecipient) }"/> &nbsp; &nbsp; &nbsp;
                    <apex:actionFunction immediate="true" name="recipientsListSectionJS1" action="{!addRecipient}" rerender="recipientsListSection" status="LoadingStatus"/>
                    <apex:actionStatus id="LoadingStatus">
                        <apex:facet name="start">
                        <div class="waitingSearchDiv" style="width: 100%; height: 100%; display: ; opacity:.5;"></div>
                        <img src="{!$Resource.loading}" style="width:20px;height:20px" /></apex:facet>
                    </apex:actionStatus>
                </apex:outputPanel>           
                <apex:outputPanel title="{!$ObjectType.echosign_dev1__SIGN_Agreement__c.fields.echosign_dev1__SenderSigns__c.inlineHelpText}" id="recDetailPanel" rendered="{! NOT(isDisableSenderSigns) }">
                	<apex:inputField value="{!agreement.echosign_dev1__SenderSigns__c}" rendered="{! notYetSent && !isReadOnlySenderSigns }" >
                    	<apex:actionSupport event="onclick" rerender="recDetailPanel" />
                    </apex:inputField>
                    <apex:outputField value="{!agreement.echosign_dev1__SenderSigns__c}" rendered="{! hasBeenSent || isReadOnlySenderSigns }" />
                    <apex:outputLabel >{!$ObjectType.SIGN_Agreement__c.fields.SenderSigns__c.label} &nbsp;&nbsp;&nbsp;</apex:outputLabel>
                    <apex:selectList value="{!agreement.echosign_dev1__SignatureOrder__c}" rendered="{!AND(agreement.echosign_dev1__SenderSigns__c, notYetSent)}" size="1" disabled="{! isReadOnlySenderSigns }">
                    	<apex:selectOptions value="{!senderSignsOptions}"/>
                    </apex:selectList>                          
                    <apex:outputField value="{!agreement.echosign_dev1__SignatureOrder__c}" rendered="{!AND(agreement.echosign_dev1__SenderSigns__c, hasBeenSent)}" />
                </apex:outputPanel>
                <apex:outputPanel title="{!$ObjectType.echosign_dev1__SIGN_Agreement__c.fields.echosign_dev1__Enable_Hosted_Signing__c.inlineHelpText}" rendered="{! cusSettings.Enable_Hosted_Signing_Field__c }">
                    <apex:inputField id="EnableHostedSigning" value="{!agreement.echosign_dev1__Enable_Hosted_Signing__c}" rendered="{! notYetSent && !isReadOnlyHostedSigning }"/> 
                    <apex:outputField value="{!agreement.echosign_dev1__Enable_Hosted_Signing__c}" rendered="{! OR(hasBeenSent, isFiled, isReadOnlyHostedSigning) }" />
                    <apex:outputLabel >{!$Label.Host_Sign_First_Label} &nbsp; &nbsp;</apex:outputLabel>
                    <apex:outputPanel rendered="{!AND(hasBeenSent,!isFiled,!isAborted)}">
                        <apex:commandLink id="sendAgreementLink" action="{!retrieveSigningUrl}" onclick="if( isIosMobile ) { showSpinner(); } else { myShow('{!$Page.echosign_dev1__SendForSignature}'); }" oncomplete="if(pageHasError=='false'){sendEnabled = false; myShow('{!agreementSigningUrl}'); window.document.getElementById('dialogCloseButton').style.display = 'block'; }else{onFinish();}" rerender="errorPanel,errorPanelBottom,floatingDiv,agreementDetailsOP,AgreementOptionsSection,recipientsSection,theSigningPanel,theStatusPanel" rendered="{!agreement.echosign_dev1__Enable_Hosted_Signing__c}">{!$Label.Host_Sign_Current_Label}</apex:commandLink>                               
                    </apex:outputPanel>                        
                </apex:outputPanel>                   
                
                <apex:outputPanel rendered="{! NOT(isDisableCc) }">
                    <apex:outputLabel >{!$ObjectType.SIGN_Agreement__c.fields.Cc__c.label}: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</apex:outputLabel>
                    <apex:inputText value="{!agreement.echosign_dev1__Cc__c}" size="100" rendered="{!notYetSent}" disabled="{! isReadOnlyCc }"/>
                    <apex:outputField value="{!agreement.echosign_dev1__Cc__c}" rendered="{!hasBeenSent}" />
                </apex:outputPanel>     
            </apex:pageBlockSection>
            
            <apex:pageBlockSection title="{!$Label.Detail_Section_Header}"/>
            
            <apex:outputPanel id="agreementDetailsOP">
            <table width="90%">
                <tr>
                    <td style="" align="right" width="25%"><b>{!$ObjectType.SIGN_Agreement__c.fields.Name.label}</b>&nbsp;</td>
                    <td colspan="3">
                        <apex:outputPanel title="{!$Label.Agreement_Name_Tooltip}" styleClass="requiredInput" layout="block" rendered="{! notYetSent && !isReadOnlyAgreementName }">  
                            <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                            <apex:inputfield style="width:515px" id="agreementName" value="{!agreement.Name}"/>
                            <apex:outputPanel styleClass="errorMsg" layout="block" rendered="{!errorAgreementName}">
                                <strong>{!$Label.Error_Heading}:</strong> {!$Label.Required_Value_Error}.
                            </apex:outputPanel>                            
                        </apex:outputPanel>
                        <apex:outputText title="{!$Label.Agreement_Name_Tooltip}" value="{!agreement.Name}" rendered="{! hasBeenSent || isReadOnlyAgreementName }"/>
                    </td>
                </tr>
                <tr>
                    <td align="right" width="25%"><b>{!$ObjectType.SIGN_Agreement__c.fields.Message__c.label}</b>&nbsp;</td>
                    <td colspan="3">
                        <apex:outputPanel title="{!$ObjectType.echosign_dev1__SIGN_Agreement__c.fields.echosign_dev1__Message__c.inlineHelpText}">
                            <apex:inputTextArea value="{!agreement.echosign_dev1__Message__c}" rows="5" cols="100" rendered="{!notYetSent}" disabled="{! isReadOnlyMessage }" />
                            <apex:outputText value="{!agreement.echosign_dev1__Message__c}" rendered="{!hasBeenSent}" />
                        </apex:outputPanel>
                    </td>
                </tr> 
                <tr>
                    <td align="right" width="25%"><b>{!$ObjectType.SIGN_Agreement__c.fields.AgreementLocale__c.label}</b>&nbsp;</td>
                    <td width="25%">
                        <apex:outputPanel title="{!$ObjectType.echosign_dev1__SIGN_Agreement__c.fields.echosign_dev1__AgreementLocale__c.inlineHelpText}" styleClass="requiredInput" layout="block" rendered="{!notYetSent}">  
                            <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                            <apex:selectList value="{!agreement.echosign_dev1__AgreementLocale__c}" size="1" disabled="{! isReadOnlyLanguage }">
                                <apex:selectOptions value="{!languages}"/>
                            </apex:selectList>
                            <apex:outputPanel styleClass="errorMsg" layout="block" rendered="{!errorAgreementLocale}">
                                <strong>{!$Label.Error_Heading}:</strong> {!$Label.Required_Value_Error}.
                            </apex:outputPanel>
                        </apex:outputPanel>
                        <apex:outputText title="{!$ObjectType.echosign_dev1__SIGN_Agreement__c.fields.echosign_dev1__AgreementLocale__c.inlineHelpText}" value="{!agreement.echosign_dev1__AgreementLocale__c}" rendered="{!hasBeenSent}" />
                    </td>
                    <td align="right" width="25%"><apex:outputPanel rendered="{! NOT(isDisableOpportunityLookup) }"><b>{!$ObjectType.SIGN_Agreement__c.fields.Opportunity__c.label}</b>&nbsp;</apex:outputPanel></td>
                    <td width="25%">
                        <apex:outputPanel rendered="{! NOT(isDisableOpportunityLookup) }">
                            <apex:inputField value="{!agreement.echosign_dev1__Opportunity__c}" rendered="{! notYetSent && !isReadOnlyOpportunity }"/>
                            <apex:outputField value="{!agreement.echosign_dev1__Opportunity__c}" rendered="{! hasBeenSent || isReadOnlyOpportunity }" />
                        </apex:outputPanel>
                    </td>
                                       
                </tr>
                <tr>
                    <td align="right" width="25%"><apex:outputPanel rendered="{! NOT(isDisableSignatureType) }"><b>{!$ObjectType.SIGN_Agreement__c.fields.SignatureType__c.label}</b>&nbsp;</apex:outputPanel></td>
                    <td width="25%">
                        <apex:outputPanel styleClass="requiredInput" layout="block" rendered="{! notYetSent && NOT(isDisableSignatureType) }">  
                            <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                            <apex:selectList value="{!agreement.echosign_dev1__SignatureType__c}" size="1" disabled="{! isReadOnlySignatureType }">
                                <apex:selectOption itemValue="e-Signature" itemLabel="{!$Label.E_Signature_Type_Label}" />
                                <apex:selectOption itemValue="Written Signature" itemLabel="{!$Label.Written_Signature_Type_Label}" />
                                <apex:actionSupport event="onchange" action="{!updateEmail_FaxAddressForAll}" rerender="recipientsListSection"/>
                            </apex:selectList>                           
                            <apex:outputPanel styleClass="errorMsg" layout="block" rendered="{!errorSignatureType}">
                                <strong>{!$Label.Error_Heading}:</strong> {!$Label.Required_Value_Error}.
                            </apex:outputPanel>
                        </apex:outputPanel>
                        <apex:outputText value="{!agreement.echosign_dev1__SignatureType__c}" rendered="{!hasBeenSent}" />
                    </td>
                    <td align="right" width="25%"><apex:outputPanel rendered="{! NOT(isDisableAccountLookup) }"><b>{!$ObjectType.SIGN_Agreement__c.fields.Account__c.label}</b>&nbsp;</apex:outputPanel></td>
                    <td width="25%">
                        <apex:outputPanel rendered="{! NOT(isDisableAccountLookup) }">
                            <apex:inputField value="{!agreement.echosign_dev1__Account__c}" rendered="{! notYetSent && !isReadOnlyAccount }"/>
                            <apex:outputField value="{!agreement.echosign_dev1__Account__c}" rendered="{! hasBeenSent || isReadOnlyAccount }" />
                        </apex:outputPanel>
                    </td> 
                                       
                </tr>
                               
                <tr>                    
                    <apex:outputPanel rendered="{!AND(isFiled, LEN(agreement.echosign_dev1__SignedPDF__c) > 0)}">   
                    <td align="right" width="25%"><b>{!$ObjectType.SIGN_Agreement__c.fields.Document__c.label}</b>&nbsp;</td>
                    <td width="25%">
                        <apex:outputlink rendered="{!NOT ISNULL(agreement.echosign_dev1__SignedPDF__c)}" value="{!agreement.echosign_dev1__SignedPDF__c}">
                            <apex:image value="https://secure.echosignforsalesforce.com/images/salesforce-pdf-icon.gif"/>
                            {!agreement.Name} - {! IF(isSigned, 'signed', 'approved') }.pdf
                        </apex:outputlink>
                    </td>                   
                    </apex:outputPanel> 
                </tr>
            </table>                
            </apex:outputPanel>
            <apex:pageBlockSection title="{!$Label.Agreement_Options_Section_Header}" columns="1" id="AgreementOptionsSection">
                    <apex:outputPanel title="{!$ObjectType.echosign_dev1__SIGN_Agreement__c.fields.echosign_dev1__DaysUntilSigningDeadline__c.inlineHelpText}" rendered="{! NOT(isDisableSignExpiration) }">
                        <table >
                        <tr>
                        <td>
                        {!$Label.Agreement_Expiration_Prefix}&nbsp; 
                        </td>
                        <td>
                        <apex:inputField value="{!agreement.echosign_dev1__DaysUntilSigningDeadline__c}" onkeypress="return checkLength(event,this)" style="width:25px" id="daysUntilSigned" rendered="{! notYetSent && !isReadOnlySignExpiration }"/> 
                        <script type="text/javascript">
                            if(document.getElementById('{!$Component.daysUntilSigned}')!=null)
                                document.getElementById('{!$Component.daysUntilSigned}').size = 3;    
                             function checkLength(event,val){
                                if(isNumberKey(event)==true){
                                    if(val.value.length>2){
                                        val.value = val.value.substring(0,2);                                           
                                        return true;
                                    }else{
                                        return true;
                                    }
                                }else{                          
                                    return false;
                                }
                             }
                        </script>
                        <apex:outputField value="{!agreement.echosign_dev1__DaysUntilSigningDeadline__c}" rendered="{! hasBeenSent || isReadOnlySignExpiration }" />
                        </td>
                        <td >
                        {!$Label.Agreement_Expiration_Postfix}
                        </td>
                        </tr>
                        </table>
                    </apex:outputPanel>
                <apex:outputPanel title="{!$ObjectType.echosign_dev1__SIGN_Agreement__c.fields.echosign_dev1__Enable_Automatic_Reminders__c.inlineHelpText}" id="remindRecipientPanel" rendered="{! NOT(isDisableSignReminder) }">
                    <apex:inputField value="{!agreement.echosign_dev1__Enable_Automatic_Reminders__c}" rendered="{! notYetSent && !isReadOnlySignReminder }">
                        <apex:actionSupport event="onclick" rerender="remindRecipientPanel" /> 
                    </apex:inputField>
                    <apex:outputField value="{!agreement.echosign_dev1__Enable_Automatic_Reminders__c}" rendered="{! hasBeenSent || isReadOnlySignReminder }" />
                    <apex:outputLabel >{!$ObjectType.SIGN_Agreement__c.fields.RemindRecipient__c.label} &nbsp; &nbsp;</apex:outputLabel>
                    <apex:inputField value="{!agreement.echosign_dev1__RemindRecipient__c}" rendered="{!AND(AND(notYetSent,!isReadOnlySignReminder), agreement.echosign_dev1__Enable_Automatic_Reminders__c)}"/>
                    <apex:outputField value="{!agreement.echosign_dev1__RemindRecipient__c}" rendered="{!AND(OR(hasBeenSent,isReadOnlySignReminder), agreement.echosign_dev1__Enable_Automatic_Reminders__c)}" />
                                       
                </apex:outputPanel>   
                <apex:outputPanel title="{!$ObjectType.echosign_dev1__SIGN_Agreement__c.fields.echosign_dev1__Authoring__c.inlineHelpText}" rendered="{! NOT(isDisablePreviewPosition) }">
                    <apex:inputField value="{!agreement.echosign_dev1__Authoring__c}" rendered="{! notYetSent && !isReadOnlySignPreviewPosition }"/>
                    <apex:outputField value="{!agreement.echosign_dev1__Authoring__c}" rendered="{! hasBeenSent || isReadOnlySignPreviewPosition }" />
                    <apex:outputLabel >{!$Label.Authoring_Field_Label}</apex:outputLabel>
                </apex:outputPanel>
                        <apex:inputHidden id="pageHasError" value="{!pageHasError}" /> 
                            
                        <script>
                function styleButtons() {
            	    $jquery('input[name={!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.sendAgreementLink}]').removeClass('btn');          	
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.saveAgreementLink}]').removeClass('btn');
                	
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock455.buttonsSection.buttons.sendAgreementLink}]').removeClass('btn');
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock455.buttonsSection.buttons.saveAgreementLink}]').removeClass('btn');
                	
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.cancelAgreementLink}]').removeClass('btn');
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.cancelAgreement}]').removeClass('btn');
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.deleteAgreement}]').removeClass('btn');
                	
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock455.buttonsSection.buttons.cancelAgreementLink}]').removeClass('btn');
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock455.buttonsSection.buttons.cancelAgreement}]').removeClass('btn');
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock455.buttonsSection.buttons.deleteAgreement}]').removeClass('btn');
                	
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.updateAgreement}]').removeClass('btn');
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.viewAgreement}]').removeClass('btn');
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.remindAgreement}]').removeClass('btn');
                	
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock455.buttonsSection.buttons.updateAgreement}]').removeClass('btn');
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock455.buttonsSection.buttons.viewAgreement}]').removeClass('btn');
                	$jquery('input[name={!$Component.AgreementFormId.actionPageBlock455.buttonsSection.buttons.remindAgreement}]').removeClass('btn');
                	
                	$jquery('input[name={!$Component.AgreementFormId.attachmentSection.attachmentsActionsSection.uploadAgreementLink}]').removeClass('btn');
            	}
            	                                        
                jQuery( window ).load(function() {
                	if( !{!isApiKeySet} ) {
                    	window.location = '/apex/EchoSignAdmin';
                   	} else {
                    	document.getElementById('{!$Component.agreementPanel}').style.display = 'block';
                    }

                    init();
                    buildPopup();
            		styleButtons();
                    onLoadActions();
            	});
            	
                            var isErrorFromServer = false; 
                            var sendEnabled = true;                                
                            var pageHasError = document.getElementById("{!$Component.AgreementFormId.detailPageBlock.AgreementOptionsSection.pageHasError}").value;                         
                            if('{!showSecPopup}'=='true'){
                                 buildSecurityPopup();  
                            }
                            
                    function isNumberKey(evt)
                    {                    
                        var charCode = (evt.which) ? evt.which : evt.keyCode;
                        if (charCode > 31 && (charCode < 47 || charCode > 57 ) )
                        {
                            return false;
                        }
                        else
                        {
                            return true;
                        }
                    }
                    function init() {                
                        // set focus on your element here 
                        if(document.getElementById('{!$Component.AgreementFormId.detailPageBlock.agreementName}')!=null)
                            document.getElementById('{!$Component.AgreementFormId.detailPageBlock.agreementName}').focus();
                    }
                    
                    function onLoadActions() {
                        var onLoadAction = '{! JSENCODE($CurrentPage.parameters.onloadAction) }'.toLowerCase();
                        var onLoadActionField = '{! JSENCODE(agreement.On_Load_Action__c) }';

                        if( {!isEnableOnloadActionSend} && 
                            ( onLoadAction == 'send' || onLoadActionField == 'Send' ) ) {
                            document.getElementById('{!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.sendAgreementLink}').click();
                        } else if( {!isEnableOnloadActionRemind} && 
                            ( onLoadAction == 'remind' || onLoadActionField == 'Remind' ) ) {
                            sendReminder();
                        } else if( {!isEnableOnloadActionUpdate} && 
                            ( onLoadAction == 'update' || onLoadActionField == 'Update' ) ) {
                            updateStatus();
                        } else if( {!isEnableOnloadActionDelete} && 
                            ( onLoadAction == 'delete' || onLoadActionField == 'Delete' ) ) {
                            if(!confirm('{! JSENCODE($Label.Confirm_Prompt) }')){return false;} deleteAgreement();
                        } else if( {!isEnableOnloadActionCancel} && 
                            ( onLoadAction == 'cancel' || onLoadActionField == 'Cancel' ) ) {
                            if(!confirm('{! JSENCODE($Label.Confirm_Prompt) }')){return false;} cancelAgreement();
                        } else if( {!isEnableOnloadActionView} && 
                            ( onLoadAction == 'view' || onLoadActionField == 'View' ) ) {
                            viewAgreement();
                        }
                    }

                    function onComplete(){
                        if(pageHasError=='false'){  
                            createAgreement();
                        }else{  
                            if( isIE6 || {!isWindowActionWindowType} ) {                      
                                if(popup && !popup.closed){
                                    if( isIosMobile ) {
                                        hideSpinner();
                                    } else {
                                        popup.close();
                                    }   
                                }                               
                            }else{
                                box.cancel();
                            }
                        }
                    }                                   

                    function onFinish(){
                        if( isIE6 || {!isWindowActionWindowType} ) {                 
                            if(popup && !popup.closed){
                                if( isIosMobile ) {
                                    hideSpinner();
                                } else {
                                    popup.close();
                                }
                            } else if( isIosMobile ) {
                                box.cancel();
                            }                             
                        }else{
                            box.cancel();
                        }
                    } 
                      
                function buildSecurityPopup() {
                    var secbox = sfdcPage.getDialogById("EchoSignSecurityPopup");
                                    
                    if( secbox == null ) {
                       secbox = new parent.SimpleDialog("EchoSignSecurityPopup", true); 
                       secbox.cancel=function() { secbox.hide(); };
                       parent.secbox = secbox; 
                       sfdcPage.dialogs[parent.secbox.id] = parent.secbox;
                       secbox.displayX=false;                   
                       secbox.createDialog();        
                       secbox.setWidth("435px");                       
                    }
                    
                    var frameUrl = '{!$Page.ApiKeyInput}?reloadPage=true';
                    var srcFrame = '<iframe height="480px" width="400px" frameborder="no" id="popup" style="border:0;" src="'+frameUrl+'"></iframe>';
                    secbox.setContentInnerHTML(srcFrame);
                    secbox.show();
               }
          
            function hidesecWindow(){
                if(pageHasError=='false'){
                    secbox.hide();
                    setTimeout("reloadPage()", 750);                            
                }else{
                    secbox.hide();
                }
            }                          
            function buildPopup(){   
                var box = sfdcPage.getDialogById("EchoSignWindow");                   
                if(box==null){
                    box = new parent.SimpleDialog("EchoSignWindow", true); 
                    box.cancel=function(){hideWindow();};
                    parent.box = box; 
                    sfdcPage.dialogs[parent.box.id] = parent.box;
                    box.displayX=false;         
                    box.createDialog(); 
                    box.setWidth("1050px"); //box.setWidth("75%");
                }
            }
            // Calculate the size of the page so we can set the popup size
             var viewportwidth;
             var viewportheight;
             
             // the more standards compliant browsers (mozilla/netscape/opera/IE7) use window.innerWidth and window.innerHeight
             
             if (typeof window.innerWidth != 'undefined')
             {
                  viewportwidth = window.innerWidth,
                  viewportheight = window.innerHeight
             }
             
            // IE6 in standards compliant mode (i.e. with a valid doctype as the first line in the document)
            
             else if (typeof document.documentElement != 'undefined'
                 && typeof document.documentElement.clientWidth !=
                 'undefined' && document.documentElement.clientWidth != 0)
             {
                   viewportwidth = document.documentElement.clientWidth,
                   viewportheight = document.documentElement.clientHeight
             }
             
             // older versions of IE
             
             else
             {
                   viewportwidth = document.getElementsByTagName('body')[0].clientWidth,
                   viewportheight = document.getElementsByTagName('body')[0].clientHeight
             }
            var height = viewportheight*.85; 
            var frameWidth = 980; //viewportwidth*.72;   //"100%";
            
                    function hideWindow(){
                        if(pageHasError=='false'){
                            box.hide();
                            setTimeout("reloadPage()", 750);                            
                        }else{
                            box.hide();
                        }
                    }  
                    
                    function hideFrame() {
                        box.hide();
                    }
                    
                                        
                    function isFrameUrlMobile(url) {
                        if( ( url.indexOf('{!$Page.SendReminder}') != -1 ) ||
                            ( url.indexOf('{!$Page.DeleteAgreement}') != -1 ) ||
                            ( url.indexOf('{!$Page.CancelAgreement}') != -1 ) ) {
                            return true;
                        }

                        return false;
                    }
                    
                    function myShow(myURL){
                        if( {!isWindowActionWindowType} ) {
                            echosignPopup(myURL);
                        } else if( {!isFrameActionWindowType} ) {
                            var mySRC;
                            mySRC = '<iframe height="'+height+'"px width="'+frameWidth+'"px frameborder="no" id="popup" style="border:0;" src="'+myURL+'"></iframe><div class="buttons"><input id="dialogCloseButton" style="display: none; margin-left: auto; margin-right: auto;" value="{!$Label.Close_Button_Label}" class="btn" name="{!$Label.Close_Button_Label}" onclick="box.cancel()" title="{!$Label.Close_Button_Label}" type="button" /><input id="dialogCancelButton" style="display: none; margin-left: auto; margin-right: auto;" value="{!$Label.Cancel_Button_Label}" class="btn" name="{!$Label.Cancel_Button_Label}" onclick="box.cancel()" title="{!$Label.Cancel_Button_Label}" type="button" /></div>';
                            box.setContentInnerHTML(mySRC);
                            box.show();
                        } else if( isIosMobile && isFrameUrlMobile(myURL) ) {
                            var mySRC = '<iframe height="'+height+'"px width="'+frameWidth+'"px frameborder="no" id="popup" style="border:0;" src="'+myURL+'"></iframe><div class="buttons"><input id="dialogCloseButton" style="display: none; margin-left: auto; margin-right: auto;" value="{!$Label.Close_Button_Label}" class="btn" name="{!$Label.Close_Button_Label}" onclick="box.cancel()" title="{!$Label.Close_Button_Label}" type="button" /><input id="dialogCancelButton" style="display: none; margin-left: auto; margin-right: auto;" value="{!$Label.Cancel_Button_Label}" class="btn" name="{!$Label.Cancel_Button_Label}" onclick="box.cancel()" title="{!$Label.Cancel_Button_Label}" type="button" /></div>';
                            box.setContentInnerHTML(mySRC);
                            box.show();
                        } else if(isIE6) {
                            echosignPopup(myURL);
                        } else { 
                            var mySRC;
                            mySRC = '<iframe height="'+height+'"px width="'+frameWidth+'"px frameborder="no" id="popup" style="border:0;" src="'+myURL+'"></iframe><div class="buttons"><input id="dialogCloseButton" style="display: none; margin-left: auto; margin-right: auto; width: 60px;" value="{!$Label.Close_Button_Label}" class="btn" name="{!$Label.Close_Button_Label}" onclick="box.cancel()" title="{!$Label.Close_Button_Label}" type="button" /><input id="dialogCancelButton" style="display: none; margin-left: auto; margin-right: auto;" value="{!$Label.Cancel_Button_Label}" class="btn" name="{!$Label.Cancel_Button_Label}" onclick="box.cancel()" title="{!$Label.Cancel_Button_Label}" type="button" /></div>';
                            box.setContentInnerHTML(mySRC);
                            box.show();
                        }
                    }               
                                                              
                    function reloadPage() {
                        if( '{!JSENCODE(agreement.ReturnURL__c)}'!='' && !sendEnabled && !isErrorFromServer ) {
                            window.location.href = '{!JSENCODE(agreement.ReturnURL__c)}';
                         } else {
                            var reloadUrl = window.location.href;
                            try {
                                reloadUrl = stripOnloadActionParam(reloadUrl);
                            } catch(err) {
                            }
                            window.location.href = reloadUrl;
                         }
                    }
                    
                    function stripOnloadActionParam(reloadUrl) {
                        if( !getParam().onloadAction &&
                            !getParam().onloadaction ) {
                            return reloadUrl;   
                        }
                        
                        var convertedUrl = reloadUrl.replace(/&onloadAction=send/gi, '');
                        convertedUrl = convertedUrl.replace(/&onloadAction=remind/gi, '');
                        convertedUrl = convertedUrl.replace(/&onloadAction=view/gi, '');
                        convertedUrl = convertedUrl.replace(/&onloadAction=delete/gi, '');
                        convertedUrl = convertedUrl.replace(/&onloadAction=cancel/gi, '');
                        convertedUrl = convertedUrl.replace(/&onloadAction=update/gi, '');
                        
                        convertedUrl = convertedUrl.replace(/onloadAction=send&/gi, '');
                        convertedUrl = convertedUrl.replace(/onloadAction=remind&/gi, '');
                        convertedUrl = convertedUrl.replace(/onloadAction=view&/gi, '');
                        convertedUrl = convertedUrl.replace(/onloadAction=delete&/gi, '');
                        convertedUrl = convertedUrl.replace(/onloadAction=cancel&/gi, '');
                        convertedUrl = convertedUrl.replace(/onloadAction=update&/gi, '');
                        
                        convertedUrl = convertedUrl.replace(/onloadAction=send/gi, '');
                        convertedUrl = convertedUrl.replace(/onloadAction=remind/gi, '');
                        convertedUrl = convertedUrl.replace(/onloadAction=view/gi, '');
                        convertedUrl = convertedUrl.replace(/onloadAction=delete/gi, '');
                        convertedUrl = convertedUrl.replace(/onloadAction=cancel/gi, '');
                        convertedUrl = convertedUrl.replace(/onloadAction=update/gi, '');
                        
                        return convertedUrl;
                    }
                    
                    function getParam() {
                        var params = {};

                        if (location.search) {
                            var parts = location.search.substring(1).split('&');

                            for (var i = 0; i < parts.length; i++) {
                                var nv = parts[i].split('=');
                                if (!nv[0]) continue;
                                params[nv[0]] = nv[1] || true;
                            }
                        }
                        return params;
                    }
                    
                function echosignParameters(extraOptions) {
                    return jQuery.extend({ 
                      Agreement_ID: '{!JSENCODE(strID)}',
                      New_Record_ID: '{!JSENCODE(strNewID)}',
                      Version: '{! JSENCODE(strVersion) }',
                      namespace: '{! JSENCODE(strNamespace) }',
                      session: '{!$Api.Session_ID}',
                      organizationId: '{!$Organization.Id}',
                      server: '{!$Api.Partner_Server_URL_70}',
                      Status: '{!agreementStatus}',
                      LastEventId: '{!lastEventId}',
                      signerFields: '{!IF(NOT ISNULL(cusSettings.Override_Recipient_Field_List__c),cusSettings.Override_Recipient_Field_List__c,JSENCODE(strNamespace)+"__Recipient_Addresses__c")}',
                      attachmentIds: '{!JSENCODE(agreement.Attachment_ID_Order__c)}',
                      mergeFields: '{!JSENCODE(strNamespace)}__Merge__c',
                      AdditionalOptions: '{!JSENCODE(agreement.AdditionalOptions__c)}'
                    }, extraOptions);
                }
                
                var ECHOSIGN_URL_BASE = '{! JSENCODE(strBaseURL) }';
                    
                function echosignUrl(subpath, extraOptions) {
                    return ECHOSIGN_URL_BASE + subpath + '?' + jQuery.param(echosignParameters(extraOptions));
                }                                                   
                
                function checkAndroidPopup() {
                    try {
                        var popupStr = popup + ' ';
                    } catch(err) {
                        if(pageHasError=='false') {
                            reloadPage();
                        }
                        return;
                    }
                    setTimeout("checkAndroidPopup()",1000);
                }
                  
                function checkPopup() {
                    if (!popup || popup.closed) {
                        if(pageHasError=='false')
                            reloadPage();
                        return;
                    }
                    
                    if( isSfdcApp ) {
	                	setTimeout("reloadPage()",2000);
                    }
                    
                    setTimeout("checkPopup()",1000);
                }
                                
                function echosignPopup(url) {
                    //12.30.10--use floating div//
                    if( {!isWindowActionWindowType} ) {
                        popup = window.open(url, 'EchoSign', 'menubar=0,width=960,height=620,toolbar=0,location=0');
                        checkPopup();
                    } else if( {!isFrameActionWindowType} ) {
                        myShow(url);
                    } else if(isIE6){
                        if( isAndroid ) {
                            popup = window.open(url, 'EchoSign');
                            checkAndroidPopup();
                        } else if( isIosMobile && isFrameUrlMobile(url) ) {
                            myShow(url);
                        } else {
                            popup = window.open(url, 'EchoSign', 'menubar=0,width=960,height=620,toolbar=0,location=0');

                            checkPopup();
                        }
                    }else{
                        myShow(url);
                    }
                }
                
                                  
                function createAgreement() {
                    if (sendEnabled) {
                        sendEnabled = false;                  
						sendAgreement();
                    }
                }
                      
                function updateStatus() {
                    echosignPopup('{!$Page.RefreshStatus}?id={!JSENCODE(strID)}');            
                    doUnsetOnLoadActionField();
                }
                  
                function sendReminder() {
                	if( isIosMobile ) {
                		showReminderSpinner();
                	} else {
                    	echosignPopup('{!$Page.SendReminder}?id={!JSENCODE(strID)}');
                    }
                    doSendReminder();                                   
                }
                  
                function viewAgreement() {
                    echosignPopup( echosignUrl('/salesforce-web/page/public/viewAgreement') );
                    window.document.getElementById('dialogCloseButton').style.display = 'block';                
                    doUnsetOnLoadActionField();
                }
                
                function deleteAgreement() {
                    deleteAgreement('');
                } 
                  
                function deleteAgreement(reason) {
                	if( isIosMobile ) {
                		showDeleteSpinner();
                	} else {              
                    	echosignPopup('{!$Page.DeleteAgreement}?id={!JSENCODE(strID)}&deleteButton=true');
                    }
                    doDeleteAgreement(reason);                       
                }
                
                function cancelAgreement(reason) {
                    if( isIosMobile ) {
                		showCancelSpinner();
                	} else {                     
                    	echosignPopup('{!$Page.CancelAgreement}?id={!JSENCODE(strID)}');
                    }
                    doCancelAgreement(reason);                     
                }
        
                function confirmation() {
                    return confirm('{! JSENCODE($Label.Confirm_Prompt) }');
                }         
                
                var isClicked = false;
    			function checkDoubleSubmit(obj) {
        			if (isClicked) {
            			return false;
        			} else {
            			isClicked = true;
        			}
    			}      
                </script>                
            </apex:pageBlockSection>
            <apex:pageBlockSection title="{!$Label.Security_Options_Section_Header}" columns="1" id="SecurityOptionsSection" rendered="{! NOT( AND( isDisableKba, isDisableWebIdentity, isDisableSignPassword, isDisableViewPassword ) ) }">
                <apex:outputPanel title="{!$Label.Verify_Identity_Tooltip}" id="allDetailPanel" rendered="{! NOT(isEnableSeparateSignerIdentity) && ( OR( NOT(isDisableSignPassword), NOT(isDisableKba), NOT(isDisableWebIdentity) ) ) && NOT(isOneSignerIdentityMethod) }">
                    <apex:inputCheckbox value="{!isEnableAllSignerIdentityMethod}" rendered="{!notYetSent}" disabled="{! isReadOnlySecurityOptions }">
                        <apex:actionSupport event="onclick" rerender="allDetailPanel,passwordPanel" />
                    </apex:inputCheckbox>
                    <apex:outputPanel rendered="{! hasBeenSent && isEnableAllSignerIdentityMethod }">
                        <img src="{!$Resource.CheckboxChecked}" alt="{!$Label.Checked_Tooltip}" width="21" height="16" title="{!$Label.Checked_Tooltip}" />
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{! hasBeenSent && NOT(isEnableAllSignerIdentityMethod) }">
                        <img src="{!$Resource.CheckboxUnchecked}" alt="{!$Label.Unchecked_Tooltip}" width="21" height="16" title="{!$Label.Unchecked_Tooltip}" />
                    </apex:outputPanel>
                    <apex:outputLabel >{!$Label.Verify_Signer_Identity} &nbsp;&nbsp;&nbsp;</apex:outputLabel>
                    <apex:outputPanel rendered="{!isEnableAllSignerIdentityMethod}">
                        <apex:selectRadio id="allSignerIdentityList" value="{!allSignerIdentityMethod}" layout="pageDirection" disabled="{! hasBeenSent || isReadOnlySecurityOptions }">
                            <apex:selectOptions value="{!signerIdentityMethods}"/>
                            <apex:actionSupport event="onchange" oncomplete="showPassword();" rerender="passwordPanel"/>
                        </apex:selectRadio>                                   
                    </apex:outputPanel>
                </apex:outputPanel>
                <apex:outputPanel title="{!$Label.Verify_Identity_Tooltip}" id="externalDetailPanel" rendered="{! isEnableSeparateSignerIdentity && ( OR( NOT(isDisableSignPassword), NOT(isDisableKba), NOT(isDisableWebIdentity) ) ) && NOT(isOneSignerIdentityMethod) }">
                    <apex:inputCheckbox value="{!isEnableExternalSignerIdentityMethod}" rendered="{!notYetSent}" disabled="{! isReadOnlySecurityOptions }">
                        <apex:actionSupport event="onclick" rerender="externalDetailPanel,passwordPanel" />
                    </apex:inputCheckbox>
                    <apex:outputPanel rendered="{! hasBeenSent && isEnableExternalSignerIdentityMethod }">
                        <img src="{!$Resource.CheckboxChecked}" alt="{!$Label.Checked_Tooltip}" width="21" height="16" title="{!$Label.Checked_Tooltip}" />
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{! hasBeenSent && NOT(isEnableExternalSignerIdentityMethod) }">
                        <img src="{!$Resource.CheckboxUnchecked}" alt="{!$Label.Unchecked_Tooltip}" width="21" height="16" title="{!$Label.Unchecked_Tooltip}" />
                    </apex:outputPanel>
                    <apex:outputLabel >{!$Label.Verify_External_Signer_Identity}</apex:outputLabel>
                    <apex:outputPanel rendered="{!isEnableExternalSignerIdentityMethod}">
                        <apex:selectRadio id="externalSignerIdentityList" value="{!externalSignerIdentityMethod}" layout="pageDirection" disabled="{! hasBeenSent || isReadOnlySecurityOptions }">
                            <apex:selectOptions value="{!signerIdentityMethods}"/>
                            <apex:actionSupport event="onchange" oncomplete="showPassword();" rerender="passwordPanel"/>
                        </apex:selectRadio>                                   
                    </apex:outputPanel>
                </apex:outputPanel>
                <apex:outputPanel title="{!$Label.Verify_Identity_Tooltip}" id="internalDetailPanel" rendered="{! isEnableSeparateSignerIdentity && ( OR( NOT(isDisableSignPassword), NOT(isDisableKba), NOT(isDisableWebIdentity) ) ) && NOT(isOneSignerIdentityMethod) }">
                    <apex:inputCheckbox value="{!isEnableInternalSignerIdentityMethod}" rendered="{!notYetSent}" disabled="{! isReadOnlySecurityOptions }">
                        <apex:actionSupport event="onclick" rerender="internalDetailPanel,passwordPanel" />
                    </apex:inputCheckbox>
                    <apex:outputPanel rendered="{! hasBeenSent && isEnableInternalSignerIdentityMethod }">
                        <img src="{!$Resource.CheckboxChecked}" alt="{!$Label.Checked_Tooltip}" width="21" height="16" title="{!$Label.Checked_Tooltip}" />
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{! hasBeenSent && NOT(isEnableInternalSignerIdentityMethod) }">
                        <img src="{!$Resource.CheckboxUnchecked}" alt="{!$Label.Unchecked_Tooltip}" width="21" height="16" title="{!$Label.Unchecked_Tooltip}" />
                    </apex:outputPanel>
                    <apex:outputLabel >{!$Label.Verify_Internal_Signer_Identity} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</apex:outputLabel>
                    <apex:outputPanel rendered="{!isEnableInternalSignerIdentityMethod}">&nbsp;
                        <apex:selectRadio id="internalSignerIdentityList" value="{!internalSignerIdentityMethod}" layout="pageDirection" disabled="{! hasBeenSent || isReadOnlySecurityOptions }">
                            <apex:selectOptions value="{!signerIdentityMethods}"/>
                            <apex:actionSupport event="onchange" oncomplete="showPassword();" rerender="passwordPanel"/>
                        </apex:selectRadio>                                   
                    </apex:outputPanel>
                </apex:outputPanel>
                    
                <apex:outputPanel title="{!$Label.Verify_Identity_Tooltip}" id="oneOptionPasswordDetailPanel" rendered="{! isEnableSeparateSignerIdentity && ( NOT(isDisableSignPassword) && isDisableKba && isDisableWebIdentity ) }">
                    <apex:outputPanel rendered="{! hasBeenSent }">
                        <apex:outputPanel rendered="{! isEnableExternalOneSignerIdentityMethod }">
                            <img src="{!$Resource.CheckboxChecked}" alt="{!$Label.Checked_Tooltip}" width="21" height="16" title="{!$Label.Checked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{! NOT(isEnableExternalOneSignerIdentityMethod) }">
                            <img src="{!$Resource.CheckboxUnchecked}" alt="{!$Label.Unchecked_Tooltip}" width="21" height="16" title="{!$Label.Unchecked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputLabel >{!$Label.External_Signer_Password}</apex:outputLabel>
                    </apex:outputPanel>
                    <br/>
                    <apex:outputPanel rendered="{! hasBeenSent }">
                        <apex:outputPanel rendered="{! isEnableInternalOneSignerIdentityMethod }">
                            <img src="{!$Resource.CheckboxChecked}" alt="{!$Label.Checked_Tooltip}" width="21" height="16" title="{!$Label.Checked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{! NOT(isEnableInternalOneSignerIdentityMethod) }">
                            <img src="{!$Resource.CheckboxUnchecked}" alt="{!$Label.Unchecked_Tooltip}" width="21" height="16" title="{!$Label.Unchecked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputLabel >{!$Label.Internal_Signer_Password}</apex:outputLabel>
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!notYetSent}">
                        <apex:inputCheckbox value="{!isEnableExternalOneSignerIdentityMethod}" disabled="{! isReadOnlySecurityOptions }">
                            <apex:actionSupport event="onclick" oncomplete="showPassword();" rerender="passwordPanel"/>
                        </apex:inputCheckbox>
                        <apex:outputLabel >{!$Label.External_Signer_Password}</apex:outputLabel>
                        <br/>
                        <apex:inputCheckbox value="{!isEnableInternalOneSignerIdentityMethod}" disabled="{! isReadOnlySecurityOptions }">
                            <apex:actionSupport event="onclick" oncomplete="showPassword();" rerender="passwordPanel"/>
                        </apex:inputCheckbox>
                        <apex:outputLabel >{!$Label.Internal_Signer_Password}</apex:outputLabel>
                    </apex:outputPanel>
                </apex:outputPanel>
                <apex:outputPanel title="{!$Label.Verify_Identity_Tooltip}" id="oneOptionAllPasswordDetailPanel" rendered="{! NOT(isEnableSeparateSignerIdentity) && ( NOT(isDisableSignPassword) && isDisableKba && isDisableWebIdentity ) }">
                    <apex:inputCheckbox value="{!isEnableOneSignerIdentityMethod}" rendered="{!notYetSent}" disabled="{! isReadOnlySecurityOptions }">
                        <apex:actionSupport event="onclick" rerender="passwordPanel" />
                    </apex:inputCheckbox>
                    <apex:outputPanel rendered="{! hasBeenSent }">
                        <apex:outputPanel rendered="{! isEnableOneSignerIdentityMethod }">
                            <img src="{!$Resource.CheckboxChecked}" alt="{!$Label.Checked_Tooltip}" width="21" height="16" title="{!$Label.Checked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{! NOT(isEnableOneSignerIdentityMethod) }">
                            <img src="{!$Resource.CheckboxUnchecked}" alt="{!$Label.Unchecked_Tooltip}" width="21" height="16" title="{!$Label.Unchecked_Tooltip}" />
                        </apex:outputPanel>
                    </apex:outputPanel>
                    <apex:outputLabel >{!$Label.Signer_Password}</apex:outputLabel>
                </apex:outputPanel>
                
                <apex:outputPanel title="{!$Label.Verify_Identity_Tooltip}" id="oneOptionKbaDetailPanel" rendered="{! isEnableSeparateSignerIdentity && ( isDisableSignPassword && NOT(isDisableKba) && isDisableWebIdentity ) }">
                    <apex:outputPanel rendered="{! hasBeenSent }">
                        <apex:outputPanel rendered="{! isEnableExternalOneSignerIdentityMethod }">
                            <img src="{!$Resource.CheckboxChecked}" alt="{!$Label.Checked_Tooltip}" width="21" height="16" title="{!$Label.Checked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{! NOT(isEnableExternalOneSignerIdentityMethod) }">
                            <img src="{!$Resource.CheckboxUnchecked}" alt="{!$Label.Unchecked_Tooltip}" width="21" height="16" title="{!$Label.Unchecked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputLabel >{!$Label.External_Signer_KBA}</apex:outputLabel>
                    </apex:outputPanel>
                    <br/>
                    <apex:outputPanel rendered="{! hasBeenSent }">
                        <apex:outputPanel rendered="{! isEnableInternalOneSignerIdentityMethod }">
                            <img src="{!$Resource.CheckboxChecked}" alt="{!$Label.Checked_Tooltip}" width="21" height="16" title="{!$Label.Checked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{! NOT(isEnableInternalOneSignerIdentityMethod) }">
                            <img src="{!$Resource.CheckboxUnchecked}" alt="{!$Label.Unchecked_Tooltip}" width="21" height="16" title="{!$Label.Unchecked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputLabel >{!$Label.Internal_Signer_KBA}</apex:outputLabel>
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!notYetSent}">
                        <apex:inputCheckbox value="{!isEnableExternalOneSignerIdentityMethod}" disabled="{! isReadOnlySecurityOptions }"/>
                        <apex:outputLabel >{!$Label.External_Signer_KBA}</apex:outputLabel>
                        <br/>
                        <apex:inputCheckbox value="{!isEnableInternalOneSignerIdentityMethod}" disabled="{! isReadOnlySecurityOptions }"/>
                        <apex:outputLabel >{!$Label.Internal_Signer_KBA}</apex:outputLabel>
                    </apex:outputPanel>
                </apex:outputPanel>
                <apex:outputPanel title="{!$Label.Verify_Identity_Tooltip}" id="oneOptionAllKbaDetailPanel" rendered="{! NOT(isEnableSeparateSignerIdentity) && ( isDisableSignPassword && NOT(isDisableKba) && isDisableWebIdentity ) }">
                    <apex:inputCheckbox value="{!isEnableOneSignerIdentityMethod}" rendered="{!notYetSent}" disabled="{! isReadOnlySecurityOptions }"/>
                    <apex:outputPanel rendered="{! hasBeenSent }">
                        <apex:outputPanel rendered="{! isEnableOneSignerIdentityMethod }">
                            <img src="{!$Resource.CheckboxChecked}" alt="{!$Label.Checked_Tooltip}" width="21" height="16" title="{!$Label.Checked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{! NOT(isEnableOneSignerIdentityMethod) }">
                            <img src="{!$Resource.CheckboxUnchecked}" alt="{!$Label.Unchecked_Tooltip}" width="21" height="16" title="{!$Label.Unchecked_Tooltip}" />
                        </apex:outputPanel>
                    </apex:outputPanel>
                    <apex:outputLabel >{!$Label.Signer_KBA}</apex:outputLabel>
                </apex:outputPanel>
                
                <apex:outputPanel title="{!$Label.Verify_Identity_Tooltip}" id="oneOptionWebIdentityDetailPanel" rendered="{! isEnableSeparateSignerIdentity && ( isDisableSignPassword && isDisableKba && NOT(isDisableWebIdentity) ) }">
                    <apex:outputPanel rendered="{! hasBeenSent }">
                        <apex:outputPanel rendered="{! isEnableExternalOneSignerIdentityMethod }">
                            <img src="{!$Resource.CheckboxChecked}" alt="{!$Label.Checked_Tooltip}" width="21" height="16" title="{!$Label.Checked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{! NOT(isEnableExternalOneSignerIdentityMethod) }">
                            <img src="{!$Resource.CheckboxUnchecked}" alt="{!$Label.Unchecked_Tooltip}" width="21" height="16" title="{!$Label.Unchecked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputLabel >{!$Label.External_Signer_Identity}</apex:outputLabel>
                    </apex:outputPanel>
                    <br/>
                    <apex:outputPanel rendered="{! hasBeenSent }">
                        <apex:outputPanel rendered="{! isEnableInternalOneSignerIdentityMethod }">
                            <img src="{!$Resource.CheckboxChecked}" alt="{!$Label.Checked_Tooltip}" width="21" height="16" title="{!$Label.Checked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{! NOT(isEnableInternalOneSignerIdentityMethod) }">
                            <img src="{!$Resource.CheckboxUnchecked}" alt="{!$Label.Unchecked_Tooltip}" width="21" height="16" title="{!$Label.Unchecked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputLabel >{!$Label.Internal_Signer_Identity}</apex:outputLabel>
                    </apex:outputPanel>
                    <apex:outputPanel rendered="{!notYetSent}">
                        <apex:inputCheckbox value="{!isEnableExternalOneSignerIdentityMethod}" disabled="{! isReadOnlySecurityOptions }"/>
                        <apex:outputLabel >{!$Label.External_Signer_Identity}</apex:outputLabel>
                        <br/>
                        <apex:inputCheckbox value="{!isEnableInternalOneSignerIdentityMethod}" disabled="{! isReadOnlySecurityOptions }"/>
                        <apex:outputLabel >{!$Label.Internal_Signer_Identity}</apex:outputLabel>
                    </apex:outputPanel>
                </apex:outputPanel>
                <apex:outputPanel title="{!$Label.Verify_Identity_Tooltip}" id="oneOptionAllWebIdentityDetailPanel" rendered="{! NOT(isEnableSeparateSignerIdentity) && ( isDisableSignPassword && isDisableKba && NOT(isDisableWebIdentity) ) }">
                    <apex:inputCheckbox value="{!isEnableOneSignerIdentityMethod}" rendered="{!notYetSent}" disabled="{! isReadOnlySecurityOptions }"/>
                    <apex:outputPanel rendered="{! hasBeenSent }">
                        <apex:outputPanel rendered="{! isEnableOneSignerIdentityMethod }">
                            <img src="{!$Resource.CheckboxChecked}" alt="{!$Label.Checked_Tooltip}" width="21" height="16" title="{!$Label.Checked_Tooltip}" />
                        </apex:outputPanel>
                        <apex:outputPanel rendered="{! NOT(isEnableOneSignerIdentityMethod) }">
                            <img src="{!$Resource.CheckboxUnchecked}" alt="{!$Label.Unchecked_Tooltip}" width="21" height="16" title="{!$Label.Unchecked_Tooltip}" />
                        </apex:outputPanel>
                    </apex:outputPanel>
                    <apex:outputLabel >{!$Label.Signer_Identity}</apex:outputLabel>
                </apex:outputPanel>
                
                <apex:outputPanel title="{!$ObjectType.echosign_dev1__SIGN_Agreement__c.fields.echosign_dev1__PasswordProtectPDF__c.inlineHelpText}" rendered="{! NOT(isDisableViewPassword) }">
                    <apex:inputField id="PasswordProtectPDF" value="{!agreement.echosign_dev1__PasswordProtectPDF__c}" onchange="showPassword();" rendered="{! notYetSent && !isReadOnlySecurityOptions }">
                    </apex:inputField>
                    <apex:outputField value="{!agreement.echosign_dev1__PasswordProtectPDF__c}" rendered="{! hasBeenSent || isReadOnlySecurityOptions }" />
                    <apex:outputLabel >{!$Label.Password_Protect_Label}</apex:outputLabel>                     
                    </apex:outputPanel>
                    <apex:outputPanel id="passwordPanel">           
                        <apex:outputPanel id="passwordPanel2" style="display:none;">
                            <script>  
                                if( {!notYetSent} && 
                                    ( {! isEnableAllSignerIdentityMethod && allSignerIdentityMethod = 'Password to sign agreement' }
                                        || {! isEnableExternalSignerIdentityMethod && externalSignerIdentityMethod = 'Password to sign agreement' } 
                                        || {! isEnableInternalSignerIdentityMethod && internalSignerIdentityMethod = 'Password to sign agreement' }
                                        || {! agreement.echosign_dev1__PasswordProtectPDF__c }
                                        || {! ( NOT(isDisableSignPassword) && isDisableKba && isDisableWebIdentity && ( isEnableOneSignerIdentityMethod || isEnableExternalOneSignerIdentityMethod || isEnableInternalOneSignerIdentityMethod ) ) } ) ) {
                                    document.getElementById('{!$Component.passwordPanel2}').style.display = '';
                                } else {
                                    document.getElementById('{!$Component.passwordPanel2}').style.display = 'none';
                                }
                                
                                function showPassword() {
                                    if({!notYetSent} && 
                                        ( {! isEnableAllSignerIdentityMethod && allSignerIdentityMethod = 'Password to sign agreement' }
                                        || {! isEnableExternalSignerIdentityMethod && externalSignerIdentityMethod = 'Password to sign agreement' } 
                                        || {! isEnableInternalSignerIdentityMethod && internalSignerIdentityMethod = 'Password to sign agreement' }
                                        || {! ( NOT(isDisableSignPassword) && isDisableKba && isDisableWebIdentity && ( isEnableOneSignerIdentityMethod || isEnableExternalOneSignerIdentityMethod || isEnableInternalOneSignerIdentityMethod ) ) }
                                        || ( document.getElementById('{!$Component.PasswordProtectPDF}') && document.getElementById('{!$Component.PasswordProtectPDF}').checked ) ) ) {
                                        document.getElementById('{!$Component.passwordPanel2}').style.display='';
                                    } else {
                                        document.getElementById('{!$Component.passwordPanel2}').style.display='none';
                                    }
                                }                               
                            </script>                       
                            <apex:outputPanel id="passwordPanelInner">
                                <apex:outputLabel >{!$Label.Password_Prompt} &nbsp;&nbsp;&nbsp;</apex:outputLabel>
                                <apex:outputPanel styleClass="requiredInput">  
                                    <apex:outputPanel styleClass="requiredBlock"/>                        
                                    <apex:inputSecret value="{!password}" id="password" redisplay="true" disabled="{! isReadOnlySecurityOptions }"/>
                                </apex:outputPanel>                             
                            </apex:outputPanel>
                            <apex:outputPanel id="confirmPasswordInner">
                                <apex:outputLabel >{!$Label.Password_Confirm_Prompt} &nbsp;&nbsp;&nbsp;</apex:outputLabel>
                                <apex:outputPanel styleClass="requiredInput">
                                    <apex:outputPanel styleClass="requiredBlock"/>  
                                    <apex:inputSecret value="{!confirmPassword}" id="confirmPassword" redisplay="true" disabled="{! isReadOnlySecurityOptions }"/>
                                </apex:outputPanel>                         
                            </apex:outputPanel>                 
                        </apex:outputPanel>
                    </apex:outputPanel>
            </apex:pageBlockSection>
        </apex:pageBlock>
        
        <apex:pageBlock id="additionalFields" title="{!$Label.Additional_Fields_Section_Header}" rendered="{!$ObjectType.echosign_dev1__SIGN_Agreement__c.FieldSets.echosign_dev1__AdditionalFieldSet.size != 0}">
            <apex:pageBlockSection columns="1">
                <apex:repeat value="{!$ObjectType.echosign_dev1__SIGN_Agreement__c.FieldSets.echosign_dev1__AdditionalFieldSet}" var="field">
                    <apex:outputField value="{!agreement[field]}" rendered="{! !notYetSent || isReadOnlyFieldSet }" />
                    <apex:inputField value="{!agreement[field]}" rendered="{! notYetSent && !isReadOnlyFieldSet }">
                        <apex:actionSupport event="onchange" rerender="errorPanel,errorPanelBottom" />
                    </apex:inputField>     
                </apex:repeat>
            </apex:pageBlockSection>
        </apex:pageBlock>
        
        <apex:pageBlock title="{!$Label.Attachments_Section_Header}" id="attachmentSection" >
            <script>
        		styleButtons();
        	</script>
            <apex:pageBlockTable id="bFTablea" style="table-layout: fixed;" value="{!attachmentWrappers}" var="attachmentWrapper" columns="4" columnsWidth="15%,45%,20%,20%">     
              <apex:column >
                <apex:facet name="header">{!$Label.Attachments_Action_Column_Label}</apex:facet>
                    <apex:commandButton onclick="window.open('/servlet/servlet.FileDownload?file={!attachmentWrapper.attachment.Id}','viewattachment'); return false;" title="{!$Label.View_Attachment_Tooltip}" image="{!$Resource.echosign_dev1__ActionAttachmentView}" rendered="{! NOT(isDisableViewAttachments) }" style="background:transparent;border-width:0px;"/>
                    <apex:commandButton onclick="window.open('/{!attachmentWrapper.attachment.Id}/e?retURL=/{!agreement.Id}','editattachment'); return false;" title="{!$Label.Edit_Attachment_Tooltip}" image="{!$Resource.echosign_dev1__ActionAttachmentEdit}" rendered="{! notYetSent && NOT(isDisableEditAttachments) }" style="background:transparent;border-width:0px;margin-bottom:6px;"/>
                    <apex:commandButton action="{!onDeleteAttachment}" title="{!$Label.Delete_Attachment_Tooltip}" image="{!$Resource.echosign_dev1__ActionDelete}" rendered="{! notYetSent && NOT(isDisableDeleteAttachments) }" onclick="if (!confirm('{! JSENCODE($Label.Confirm_Prompt) }')){ return false; }else{ }" status="DeletingAttachmentStatus" rerender="attachmentSection,errorPanel,errorPanelBottom,floatingDiv" style="background:transparent;border-width:0px;margin-bottom:8px;margin-left:8px;">
                        <apex:param assignTo="{!selectedAttachmentIndex}" value="{!attachmentWrapper.index}" name="selectedAttachmentIndex"/>
                    </apex:commandButton>
                    <apex:commandButton action="{!onUpAttachment}" title="{!$Label.Attachment_Order_Tooltip}" image="{!$Resource.echosign_dev1__UpGreenArrow}" rendered="{! notYetSubmitted && NOT(attachmentWrapper.index = 0) && NOT(isDisableSortAttachments) }" status="DeletingAttachmentStatus" rerender="attachmentSection,errorPanel,errorPanelBottom,floatingDiv" style="background:transparent;border-width:0px;margin-bottom:8px;margin-left:8px;">
                        <apex:param assignTo="{!selectedAttachmentIndex}" value="{!attachmentWrapper.index}" name="selectedAttachmentIndex"/>
                    </apex:commandButton>
                    <apex:outputPanel rendered="{! notYetSubmitted && attachmentWrapper.index = 0 && NOT(isDisableSortAttachments) }">
                        <img src="{!$Resource.FadeUpGreenArrow}" alt="{!$Label.Attachment_Order_Tooltip}" style="background:transparent;border-width:0px;margin-bottom:12px;margin-left:8px;" title="{!$Label.Attachment_Order_Tooltip}" />
                    </apex:outputPanel>
                    <apex:commandButton action="{!onDownAttachment}" title="{!$Label.Attachment_Order_Tooltip}" image="{!$Resource.echosign_dev1__DownGreenArrow}" rendered="{! notYetSubmitted && NOT(attachmentWrapper.index = ( attachmentWrappers.size - 1 )) && NOT(isDisableSortAttachments) }" status="DeletingAttachmentStatus" rerender="attachmentSection,errorPanel,errorPanelBottom,floatingDiv" style="background:transparent;border-width:0px;margin-bottom:8px;margin-left:8px;">
                        <apex:param assignTo="{!selectedAttachmentIndex}" value="{!attachmentWrapper.index}" name="selectedAttachmentIndex"/>
                    </apex:commandButton>
                    <apex:outputPanel rendered="{! notYetSubmitted && attachmentWrapper.index = ( attachmentWrappers.size - 1 ) && NOT(isDisableSortAttachments) }">
                        <img src="{!$Resource.FadeDownGreenArrow}" alt="{!$Label.Attachment_Order_Tooltip}" style="background:transparent;border-width:0px;margin-bottom:12px;margin-left:8px;" title="{!$Label.Attachment_Order_Tooltip}" />
                    </apex:outputPanel>
                    <apex:actionStatus id="DeletingAttachmentStatus">
                        <apex:facet name="start">
                        <div class="waitingSearchDiv" style="width: 100%; height: 100%; display: ; opacity:.5;"></div>
                        </apex:facet>
                    </apex:actionStatus>                                   
              </apex:column>  
              <apex:column style="word-wrap: break-word;">        
                <apex:facet name="header">{!$Label.Attachments_Title_Column_Label}</apex:facet>     
                    <apex:outputText value="{!attachmentWrapper.attachment.Name}" />
              </apex:column> 
              <apex:column >        
              	<apex:facet name="header">{!$Label.Attachments_Modified_Column_Label}</apex:facet> 
                <apex:outputField value="{!attachmentWrapper.attachment.LastModifiedDate}"/>
              </apex:column>                                   
              <apex:column >        
                <apex:facet name="header">{!$Label.Attachments_Created_Column_Label}</apex:facet>     
                    <apex:outputText value="{!attachmentWrapper.attachment.CreatedBy.Name}" />
              </apex:column> 
          </apex:pageBlockTable> 
          
          <apex:pageBlockSection id="attachmentsActionsSection" columns="1">         
              <apex:outputpanel rendered="{!!hasBeenSent}">
              	<apex:commandButton id="uploadAgreementLink" onclick="checkDoubleSubmit(this);" action="{!addAttachment}" rerender="AgreementFormId" value="{!$Label.Upload_Button_Label}" styleClass="echoSignButton" rendered="{! !hasBeenSent && NOT(isDisableUploadAttachments) }"/>
                
                <apex:outputpanel rendered="{! NOT(isDisableUploadAttachments) && NOT(isDisableAttachAttachments)  }">&nbsp;<b>{!$Label.Or_Attachments_Label}</b> {!$Label.Select_From_Attachments_Label}:</apex:outputpanel>
                <apex:commandLink style="padding-left:5px; color: blue;" rerender="AgreementFormId" rendered="{! !hasBeenSent && NOT(isDisableAttachAttachments) }" value="{!$Label.Attachment_Salesforce_Documents_Label}" action="{!addDocument}" />
                
                <apex:outputpanel rendered="{! NOT(isDisableAttachAttachments) && NOT(isDisableContentAttachments)  }">&nbsp;<b>|</b></apex:outputpanel>
                <apex:commandLink style="padding-left:5px; color: blue;" rerender="AgreementFormId" rendered="{! !hasBeenSent && NOT(isDisableContentAttachments) }" value="{!$Label.Attachment_Salesforce_Content_Label}" action="{!addContent}" />
              </apex:outputpanel>
          </apex:pageBlockSection>
        </apex:pageBlock>
                
        <apex:pageBlock title="{!$Label.Agreement_Events_Section_Header}" rendered="{!hasBeenSent}">
            <apex:pageBlockTable value="{!agreementEvents}" var="agreementEvent">
                <apex:column value="{!agreementEvent.echosign_dev1__Date__c}" />
                <apex:column value="{!agreementEvent.echosign_dev1__Description__c}" />
            </apex:pageBlockTable>
        </apex:pageBlock>
        
        <apex:pageBlock title="{! IF(isApproved, $Label.Approved_Agreement_Section_Header, $Label.Signed_Agreement_Section_Header) }" rendered="{!hasSignedAgreements}">
            <apex:pageBlockTable value="{!agreementSigned}" var="signedAgreement">
                <apex:column >
                    <img src="{!signedAgreement.echosign_dev1__ImageUrl__c}"/>
                </apex:column>
            </apex:pageBlockTable>
        </apex:pageBlock>
        <apex:pageBlock title="{!$Label.Actions_Section_Header}" helpTitle="{!$Label.Agreement_Help_Label}" helpUrl="{!$Page.echosign_dev1__EchosignHelp}" id="actionPageBlock455">
            <apex:pageBlockSection id="buttonsSection" columns="1">
                <apex:pageBlockSectionItem >
                    <apex:outputPanel id="errorPanelBottom">
                        <apex:outputPanel style="text-align: left;" styleClass="errorMsg" layout="block" rendered="{!pageHaserror}">
                            <strong>{!$Label.Correct_Error_Notice} </strong>
                            <script>
                                if (popup && !popup.closed) { popup.close(); }
                                if( isIosMobile ) { hideSpinner(); }
                                //salesforceJQuery('{!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.sendAgreementButtonImage}').show();
                                //salesforceJQuery('{!$Component.AgreementFormId.actionPageBlock.buttonsSection.buttons.sendAgreementButtonDisabled}').hide();                                            
                            </script>                                 
                            <apex:messages styleClass="pbError" style="text-align: left;" />   
                        </apex:outputPanel>            
                        <apex:outputPanel rendered="{!!pageHaserror}">
                            <apex:pagemessages />
                        </apex:outputPanel>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem rendered="{!NOT(hasBeenSent) && LEN(errorMsg) > 0}">
                    <apex:outputText >
                        <apex:image url="{!$Resource.echosign_dev1__ErrorIcon}"/>
                        <apex:outputPanel styleClass="errorMsg"><b>{!errorMsg}</b></apex:outputPanel>
                    </apex:outputText>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem rendered="{!hasBeenSent}">
                    <apex:outputText >          
                        <strong>{!$Label.Agreement_Status_Label} </strong>
                        <apex:outputText value="{!agreementStatusVisible}"/>
                    </apex:outputText>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="buttons">
                    <apex:outputPanel >
                        <table width="100%">
                            <tr>
                                <td align="left">
                                	<apex:commandButton id="sendAgreementLink" value="{!$Label.Send_Button_Label}" styleClass="echoSignButton" action="{!sendForSignature}" onclick="pageHasError='false'; if( isIosMobile ) { showSpinner(); } else { myShow('{!$Page.echosign_dev1__SendForSignature}'); }" oncomplete="onComplete()" rerender="errorPanel,agreementDetailsOP,AgreementOptionsSection,recipientsSection,myPanel2" rendered="{!IF(notYetSent && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Send_Agreement__c),'true','false')}"/>  
                                    <apex:image id="sendAgreementButtonDisabled" url="{!$Resource.echosign_dev1__SendAgreementButtonDisabled}" styleClass="echo-button" style="display:none;" rendered="{!IF(notYetSent && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Send_Agreement__c),'true','false')}" />
                                    <apex:commandButton id="saveAgreementLink" onclick="checkDoubleSubmit(this);" value="{!$Label.Save_Button_Label}" styleClass="echoSignButton" action="{!saveWithoutSending}" rendered="{!IF(notYetSent && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Save_Agreement__c),'true','false')}" rerender="AgreementFormId,attachmentSection"/>
                                    <apex:commandButton id="updateAgreement" styleClass="echoSignButton" value="{!$Label.Update_Agreement_Button_Label}" rendered="{!IF(applicableForUpdate && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Update_Status__c),'true','false')}" onclick="updateStatus(); return false;" />                
                                    <apex:commandButton id="remindAgreement" styleClass="echoSignButton" value="{!$Label.Remind_Agreement_Button_Label}" rendered="{!IF(inProgress && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Send_Reminder__c),'true','false')}" onclick="sendReminder(); return false;" /> 
                                    <apex:commandButton id="viewAgreement" styleClass="echoSignButton" value="{!$Label.View_Agreement_Button_Label}" rendered="{!IF(hasBeenSent && NOT(isSendInProgress) && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__View_Agreement__c),'true','false')}" onclick="viewAgreement(); return false;"/>
                                </td>
                                <td align="right">
                                    <apex:commandButton id="deleteAgreement" styleClass="echoSignButton" value="{!$Label.Delete_Agreement_Button_Label}" rendered="{!IF(hasBeenSent && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Delete_Agreement__c),'true','false')}" onclick="if( {!inProgress} ) { var reason = window.prompt('{! JSENCODE($Label.Delete_Agreement_Prompt) } {! JSENCODE(agreement.Name) }?\n{!$Label.Reason_Prompt}:',''); if( reason === null || reason === '' && isSafari && confirm('Was that cancel?') ) { return; } else if( reason == null ) {return false;} deleteAgreement(reason); return false; } else { if(!confirm('{! JSENCODE($Label.Delete_Agreement_Prompt) }?')){return false;} deleteAgreement();  return false; }" />
                                    <apex:commandButton id="cancelAgreement" styleClass="echoSignButton" value="{!$Label.Cancel_Agreement_Button_Label}" rendered="{!IF(applicableForCancel && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Cancel_Agreement__c),'true','false')}" onclick="var reason = window.prompt('{! JSENCODE($Label.Cancel_Agreement_Prompt) } {! JSENCODE(agreement.Name) }?\n{!$Label.Reason_Prompt}:',''); if( reason === null || reason === '' && isSafari && confirm('Was that cancel?') ) { return; } else if( reason == null ) {return false;} cancelAgreement(reason); return false;" />
                                    <apex:commandButton id="cancelAgreementLink" styleClass="echoSignButton" value="{!$Label.Cancel_Button_Label}" action="{!cancelDraft}" rendered="{!IF(notYetSent && (ISNULL(cusToolbarSettings) || cusToolbarSettings.echosign_dev1__Cancel_Draft__c),'true','false')}"/>
                                </td>
                            </tr>
                        </table>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
        </apex:pageBlock> 
    </apex:form>
    
    <script>
    	styleButtons();
    </script>
    
    </apex:outputpanel>
    
</apex:page>